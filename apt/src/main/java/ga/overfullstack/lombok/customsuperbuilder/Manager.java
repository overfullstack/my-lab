package ga.overfullstack.lombok.customsuperbuilder;

import lombok.Getter;
import lombok.ToString;
import lombok.experimental.SuperBuilder;

import java.time.LocalDate;
import java.util.List;

/**
 * Manager is a type of Employee
 */
@Getter
@ToString(callSuper = true)
@SuperBuilder
public class Manager<IDT> extends Employee<IDT> {

  /**
   * Employees managed by the Manager
   */
  private final List<Employee<IDT>> teamMembers;

  /**
   * Date on which this employee became Manager
   */
  private final LocalDate promotionDate;

  /**
   * Customizing builder methods. Rest of the builder code will be auto generated by Lombok.
   *
   * @param <C>
   * @param <B>
   */
  public abstract static class ManagerBuilder<IDT, C extends Manager<IDT>, B extends ManagerBuilder<IDT, C, B>>
      extends EmployeeBuilder<IDT, C, B> {

    private LocalDate promotionDate;

    public B promotionDate(String dateStr) {
      this.promotionDate = LocalDate.parse(dateStr);
      return self();
    }
  }

  public static <IDT> ManagerBuilder<IDT, ?, ?> builder() {
    return (ManagerBuilder<IDT, ?, ?>) new ManagerBuilderImpl<IDT>();
  }
}

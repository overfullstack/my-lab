/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_toDate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/toDate */ \"./src/lib/toDate.js\");\n/* harmony import */ var _lib_toFloat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/toFloat */ \"./src/lib/toFloat.js\");\n/* harmony import */ var _lib_toInt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/toInt */ \"./src/lib/toInt.js\");\n/* harmony import */ var _lib_toBoolean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/toBoolean */ \"./src/lib/toBoolean.js\");\n/* harmony import */ var _lib_equals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/equals */ \"./src/lib/equals.js\");\n/* harmony import */ var _lib_contains__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/contains */ \"./src/lib/contains.js\");\n/* harmony import */ var _lib_matches__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/matches */ \"./src/lib/matches.js\");\n/* harmony import */ var _lib_isEmail__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/isEmail */ \"./src/lib/isEmail.js\");\n/* harmony import */ var _lib_isURL__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/isURL */ \"./src/lib/isURL.js\");\n/* harmony import */ var _lib_isMACAddress__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/isMACAddress */ \"./src/lib/isMACAddress.js\");\n/* harmony import */ var _lib_isIP__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/isIP */ \"./src/lib/isIP.js\");\n/* harmony import */ var _lib_isIPRange__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lib/isIPRange */ \"./src/lib/isIPRange.js\");\n/* harmony import */ var _lib_isFQDN__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lib/isFQDN */ \"./src/lib/isFQDN.js\");\n/* harmony import */ var _lib_isDate__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./lib/isDate */ \"./src/lib/isDate.js\");\n/* harmony import */ var _lib_isBoolean__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lib/isBoolean */ \"./src/lib/isBoolean.js\");\n/* harmony import */ var _lib_isLocale__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./lib/isLocale */ \"./src/lib/isLocale.js\");\n/* harmony import */ var _lib_isAlpha__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lib/isAlpha */ \"./src/lib/isAlpha.js\");\n/* harmony import */ var _lib_isAlphanumeric__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./lib/isAlphanumeric */ \"./src/lib/isAlphanumeric.js\");\n/* harmony import */ var _lib_isNumeric__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./lib/isNumeric */ \"./src/lib/isNumeric.js\");\n/* harmony import */ var _lib_isPassportNumber__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./lib/isPassportNumber */ \"./src/lib/isPassportNumber.js\");\n/* harmony import */ var _lib_isPort__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./lib/isPort */ \"./src/lib/isPort.js\");\n/* harmony import */ var _lib_isLowercase__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./lib/isLowercase */ \"./src/lib/isLowercase.js\");\n/* harmony import */ var _lib_isUppercase__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./lib/isUppercase */ \"./src/lib/isUppercase.js\");\n/* harmony import */ var _lib_isIMEI__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./lib/isIMEI */ \"./src/lib/isIMEI.js\");\n/* harmony import */ var _lib_isAscii__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lib/isAscii */ \"./src/lib/isAscii.js\");\n/* harmony import */ var _lib_isFullWidth__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./lib/isFullWidth */ \"./src/lib/isFullWidth.js\");\n/* harmony import */ var _lib_isHalfWidth__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./lib/isHalfWidth */ \"./src/lib/isHalfWidth.js\");\n/* harmony import */ var _lib_isVariableWidth__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./lib/isVariableWidth */ \"./src/lib/isVariableWidth.js\");\n/* harmony import */ var _lib_isMultibyte__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./lib/isMultibyte */ \"./src/lib/isMultibyte.js\");\n/* harmony import */ var _lib_isSemVer__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./lib/isSemVer */ \"./src/lib/isSemVer.js\");\n/* harmony import */ var _lib_isSurrogatePair__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./lib/isSurrogatePair */ \"./src/lib/isSurrogatePair.js\");\n/* harmony import */ var _lib_isInt__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./lib/isInt */ \"./src/lib/isInt.js\");\n/* harmony import */ var _lib_isFloat__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./lib/isFloat */ \"./src/lib/isFloat.js\");\n/* harmony import */ var _lib_isDecimal__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./lib/isDecimal */ \"./src/lib/isDecimal.js\");\n/* harmony import */ var _lib_isHexadecimal__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./lib/isHexadecimal */ \"./src/lib/isHexadecimal.js\");\n/* harmony import */ var _lib_isOctal__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./lib/isOctal */ \"./src/lib/isOctal.js\");\n/* harmony import */ var _lib_isDivisibleBy__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./lib/isDivisibleBy */ \"./src/lib/isDivisibleBy.js\");\n/* harmony import */ var _lib_isHexColor__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./lib/isHexColor */ \"./src/lib/isHexColor.js\");\n/* harmony import */ var _lib_isRgbColor__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./lib/isRgbColor */ \"./src/lib/isRgbColor.js\");\n/* harmony import */ var _lib_isHSL__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./lib/isHSL */ \"./src/lib/isHSL.js\");\n/* harmony import */ var _lib_isISRC__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./lib/isISRC */ \"./src/lib/isISRC.js\");\n/* harmony import */ var _lib_isIBAN__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/isIBAN */ \"./src/lib/isIBAN.js\");\n/* harmony import */ var _lib_isBIC__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lib/isBIC */ \"./src/lib/isBIC.js\");\n/* harmony import */ var _lib_isMD5__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./lib/isMD5 */ \"./src/lib/isMD5.js\");\n/* harmony import */ var _lib_isHash__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./lib/isHash */ \"./src/lib/isHash.js\");\n/* harmony import */ var _lib_isJWT__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./lib/isJWT */ \"./src/lib/isJWT.js\");\n/* harmony import */ var _lib_isJSON__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./lib/isJSON */ \"./src/lib/isJSON.js\");\n/* harmony import */ var _lib_isEmpty__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./lib/isEmpty */ \"./src/lib/isEmpty.js\");\n/* harmony import */ var _lib_isLength__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./lib/isLength */ \"./src/lib/isLength.js\");\n/* harmony import */ var _lib_isByteLength__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./lib/isByteLength */ \"./src/lib/isByteLength.js\");\n/* harmony import */ var _lib_isUUID__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./lib/isUUID */ \"./src/lib/isUUID.js\");\n/* harmony import */ var _lib_isMongoId__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./lib/isMongoId */ \"./src/lib/isMongoId.js\");\n/* harmony import */ var _lib_isAfter__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./lib/isAfter */ \"./src/lib/isAfter.js\");\n/* harmony import */ var _lib_isBefore__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./lib/isBefore */ \"./src/lib/isBefore.js\");\n/* harmony import */ var _lib_isIn__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./lib/isIn */ \"./src/lib/isIn.js\");\n/* harmony import */ var _lib_isCreditCard__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./lib/isCreditCard */ \"./src/lib/isCreditCard.js\");\n/* harmony import */ var _lib_isIdentityCard__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./lib/isIdentityCard */ \"./src/lib/isIdentityCard.js\");\n/* harmony import */ var _lib_isEAN__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./lib/isEAN */ \"./src/lib/isEAN.js\");\n/* harmony import */ var _lib_isISIN__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./lib/isISIN */ \"./src/lib/isISIN.js\");\n/* harmony import */ var _lib_isISBN__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./lib/isISBN */ \"./src/lib/isISBN.js\");\n/* harmony import */ var _lib_isISSN__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./lib/isISSN */ \"./src/lib/isISSN.js\");\n/* harmony import */ var _lib_isTaxID__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./lib/isTaxID */ \"./src/lib/isTaxID.js\");\n/* harmony import */ var _lib_isMobilePhone__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./lib/isMobilePhone */ \"./src/lib/isMobilePhone.js\");\n/* harmony import */ var _lib_isEthereumAddress__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./lib/isEthereumAddress */ \"./src/lib/isEthereumAddress.js\");\n/* harmony import */ var _lib_isCurrency__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./lib/isCurrency */ \"./src/lib/isCurrency.js\");\n/* harmony import */ var _lib_isBtcAddress__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./lib/isBtcAddress */ \"./src/lib/isBtcAddress.js\");\n/* harmony import */ var _lib_isISO8601__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./lib/isISO8601 */ \"./src/lib/isISO8601.js\");\n/* harmony import */ var _lib_isRFC3339__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./lib/isRFC3339 */ \"./src/lib/isRFC3339.js\");\n/* harmony import */ var _lib_isISO31661Alpha2__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./lib/isISO31661Alpha2 */ \"./src/lib/isISO31661Alpha2.js\");\n/* harmony import */ var _lib_isISO31661Alpha3__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./lib/isISO31661Alpha3 */ \"./src/lib/isISO31661Alpha3.js\");\n/* harmony import */ var _lib_isISO4217__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./lib/isISO4217 */ \"./src/lib/isISO4217.js\");\n/* harmony import */ var _lib_isBase32__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./lib/isBase32 */ \"./src/lib/isBase32.js\");\n/* harmony import */ var _lib_isBase58__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./lib/isBase58 */ \"./src/lib/isBase58.js\");\n/* harmony import */ var _lib_isBase64__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./lib/isBase64 */ \"./src/lib/isBase64.js\");\n/* harmony import */ var _lib_isDataURI__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./lib/isDataURI */ \"./src/lib/isDataURI.js\");\n/* harmony import */ var _lib_isMagnetURI__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./lib/isMagnetURI */ \"./src/lib/isMagnetURI.js\");\n/* harmony import */ var _lib_isMimeType__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./lib/isMimeType */ \"./src/lib/isMimeType.js\");\n/* harmony import */ var _lib_isLatLong__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./lib/isLatLong */ \"./src/lib/isLatLong.js\");\n/* harmony import */ var _lib_isPostalCode__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./lib/isPostalCode */ \"./src/lib/isPostalCode.js\");\n/* harmony import */ var _lib_ltrim__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./lib/ltrim */ \"./src/lib/ltrim.js\");\n/* harmony import */ var _lib_rtrim__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./lib/rtrim */ \"./src/lib/rtrim.js\");\n/* harmony import */ var _lib_trim__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./lib/trim */ \"./src/lib/trim.js\");\n/* harmony import */ var _lib_escape__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./lib/escape */ \"./src/lib/escape.js\");\n/* harmony import */ var _lib_unescape__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./lib/unescape */ \"./src/lib/unescape.js\");\n/* harmony import */ var _lib_stripLow__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./lib/stripLow */ \"./src/lib/stripLow.js\");\n/* harmony import */ var _lib_whitelist__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./lib/whitelist */ \"./src/lib/whitelist.js\");\n/* harmony import */ var _lib_blacklist__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./lib/blacklist */ \"./src/lib/blacklist.js\");\n/* harmony import */ var _lib_isWhitelisted__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./lib/isWhitelisted */ \"./src/lib/isWhitelisted.js\");\n/* harmony import */ var _lib_normalizeEmail__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./lib/normalizeEmail */ \"./src/lib/normalizeEmail.js\");\n/* harmony import */ var _lib_isSlug__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./lib/isSlug */ \"./src/lib/isSlug.js\");\n/* harmony import */ var _lib_isLicensePlate__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./lib/isLicensePlate */ \"./src/lib/isLicensePlate.js\");\n/* harmony import */ var _lib_isStrongPassword__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./lib/isStrongPassword */ \"./src/lib/isStrongPassword.js\");\n/* harmony import */ var _lib_isVAT__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./lib/isVAT */ \"./src/lib/isVAT.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst version = '13.7.0';\n\nconst validator = {\n  version,\n  toDate: _lib_toDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  toFloat: _lib_toFloat__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  toInt: _lib_toInt__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  toBoolean: _lib_toBoolean__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  equals: _lib_equals__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  contains: _lib_contains__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  matches: _lib_matches__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  isEmail: _lib_isEmail__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  isURL: _lib_isURL__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  isMACAddress: _lib_isMACAddress__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  isIP: _lib_isIP__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n  isIPRange: _lib_isIPRange__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n  isFQDN: _lib_isFQDN__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n  isBoolean: _lib_isBoolean__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n  isIBAN: _lib_isIBAN__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  isBIC: _lib_isBIC__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n  isAlpha: _lib_isAlpha__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n  isAlphaLocales: _lib_isAlpha__WEBPACK_IMPORTED_MODULE_16__.locales,\n  isAlphanumeric: _lib_isAlphanumeric__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n  isAlphanumericLocales: _lib_isAlphanumeric__WEBPACK_IMPORTED_MODULE_17__.locales,\n  isNumeric: _lib_isNumeric__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n  isPassportNumber: _lib_isPassportNumber__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n  isPort: _lib_isPort__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n  isLowercase: _lib_isLowercase__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n  isUppercase: _lib_isUppercase__WEBPACK_IMPORTED_MODULE_22__[\"default\"],\n  isAscii: _lib_isAscii__WEBPACK_IMPORTED_MODULE_23__[\"default\"],\n  isFullWidth: _lib_isFullWidth__WEBPACK_IMPORTED_MODULE_24__[\"default\"],\n  isHalfWidth: _lib_isHalfWidth__WEBPACK_IMPORTED_MODULE_25__[\"default\"],\n  isVariableWidth: _lib_isVariableWidth__WEBPACK_IMPORTED_MODULE_26__[\"default\"],\n  isMultibyte: _lib_isMultibyte__WEBPACK_IMPORTED_MODULE_27__[\"default\"],\n  isSemVer: _lib_isSemVer__WEBPACK_IMPORTED_MODULE_28__[\"default\"],\n  isSurrogatePair: _lib_isSurrogatePair__WEBPACK_IMPORTED_MODULE_29__[\"default\"],\n  isInt: _lib_isInt__WEBPACK_IMPORTED_MODULE_30__[\"default\"],\n  isIMEI: _lib_isIMEI__WEBPACK_IMPORTED_MODULE_31__[\"default\"],\n  isFloat: _lib_isFloat__WEBPACK_IMPORTED_MODULE_32__[\"default\"],\n  isFloatLocales: _lib_isFloat__WEBPACK_IMPORTED_MODULE_32__.locales,\n  isDecimal: _lib_isDecimal__WEBPACK_IMPORTED_MODULE_33__[\"default\"],\n  isHexadecimal: _lib_isHexadecimal__WEBPACK_IMPORTED_MODULE_34__[\"default\"],\n  isOctal: _lib_isOctal__WEBPACK_IMPORTED_MODULE_35__[\"default\"],\n  isDivisibleBy: _lib_isDivisibleBy__WEBPACK_IMPORTED_MODULE_36__[\"default\"],\n  isHexColor: _lib_isHexColor__WEBPACK_IMPORTED_MODULE_37__[\"default\"],\n  isRgbColor: _lib_isRgbColor__WEBPACK_IMPORTED_MODULE_38__[\"default\"],\n  isHSL: _lib_isHSL__WEBPACK_IMPORTED_MODULE_39__[\"default\"],\n  isISRC: _lib_isISRC__WEBPACK_IMPORTED_MODULE_40__[\"default\"],\n  isMD5: _lib_isMD5__WEBPACK_IMPORTED_MODULE_41__[\"default\"],\n  isHash: _lib_isHash__WEBPACK_IMPORTED_MODULE_42__[\"default\"],\n  isJWT: _lib_isJWT__WEBPACK_IMPORTED_MODULE_43__[\"default\"],\n  isJSON: _lib_isJSON__WEBPACK_IMPORTED_MODULE_44__[\"default\"],\n  isEmpty: _lib_isEmpty__WEBPACK_IMPORTED_MODULE_45__[\"default\"],\n  isLength: _lib_isLength__WEBPACK_IMPORTED_MODULE_46__[\"default\"],\n  isLocale: _lib_isLocale__WEBPACK_IMPORTED_MODULE_47__[\"default\"],\n  isByteLength: _lib_isByteLength__WEBPACK_IMPORTED_MODULE_48__[\"default\"],\n  isUUID: _lib_isUUID__WEBPACK_IMPORTED_MODULE_49__[\"default\"],\n  isMongoId: _lib_isMongoId__WEBPACK_IMPORTED_MODULE_50__[\"default\"],\n  isAfter: _lib_isAfter__WEBPACK_IMPORTED_MODULE_51__[\"default\"],\n  isBefore: _lib_isBefore__WEBPACK_IMPORTED_MODULE_52__[\"default\"],\n  isIn: _lib_isIn__WEBPACK_IMPORTED_MODULE_53__[\"default\"],\n  isCreditCard: _lib_isCreditCard__WEBPACK_IMPORTED_MODULE_54__[\"default\"],\n  isIdentityCard: _lib_isIdentityCard__WEBPACK_IMPORTED_MODULE_55__[\"default\"],\n  isEAN: _lib_isEAN__WEBPACK_IMPORTED_MODULE_56__[\"default\"],\n  isISIN: _lib_isISIN__WEBPACK_IMPORTED_MODULE_57__[\"default\"],\n  isISBN: _lib_isISBN__WEBPACK_IMPORTED_MODULE_58__[\"default\"],\n  isISSN: _lib_isISSN__WEBPACK_IMPORTED_MODULE_59__[\"default\"],\n  isMobilePhone: _lib_isMobilePhone__WEBPACK_IMPORTED_MODULE_60__[\"default\"],\n  isMobilePhoneLocales: _lib_isMobilePhone__WEBPACK_IMPORTED_MODULE_60__.locales,\n  isPostalCode: _lib_isPostalCode__WEBPACK_IMPORTED_MODULE_61__[\"default\"],\n  isPostalCodeLocales: _lib_isPostalCode__WEBPACK_IMPORTED_MODULE_61__.locales,\n  isEthereumAddress: _lib_isEthereumAddress__WEBPACK_IMPORTED_MODULE_62__[\"default\"],\n  isCurrency: _lib_isCurrency__WEBPACK_IMPORTED_MODULE_63__[\"default\"],\n  isBtcAddress: _lib_isBtcAddress__WEBPACK_IMPORTED_MODULE_64__[\"default\"],\n  isISO8601: _lib_isISO8601__WEBPACK_IMPORTED_MODULE_65__[\"default\"],\n  isRFC3339: _lib_isRFC3339__WEBPACK_IMPORTED_MODULE_66__[\"default\"],\n  isISO31661Alpha2: _lib_isISO31661Alpha2__WEBPACK_IMPORTED_MODULE_67__[\"default\"],\n  isISO31661Alpha3: _lib_isISO31661Alpha3__WEBPACK_IMPORTED_MODULE_68__[\"default\"],\n  isISO4217: _lib_isISO4217__WEBPACK_IMPORTED_MODULE_69__[\"default\"],\n  isBase32: _lib_isBase32__WEBPACK_IMPORTED_MODULE_70__[\"default\"],\n  isBase58: _lib_isBase58__WEBPACK_IMPORTED_MODULE_71__[\"default\"],\n  isBase64: _lib_isBase64__WEBPACK_IMPORTED_MODULE_72__[\"default\"],\n  isDataURI: _lib_isDataURI__WEBPACK_IMPORTED_MODULE_73__[\"default\"],\n  isMagnetURI: _lib_isMagnetURI__WEBPACK_IMPORTED_MODULE_74__[\"default\"],\n  isMimeType: _lib_isMimeType__WEBPACK_IMPORTED_MODULE_75__[\"default\"],\n  isLatLong: _lib_isLatLong__WEBPACK_IMPORTED_MODULE_76__[\"default\"],\n  ltrim: _lib_ltrim__WEBPACK_IMPORTED_MODULE_77__[\"default\"],\n  rtrim: _lib_rtrim__WEBPACK_IMPORTED_MODULE_78__[\"default\"],\n  trim: _lib_trim__WEBPACK_IMPORTED_MODULE_79__[\"default\"],\n  escape: _lib_escape__WEBPACK_IMPORTED_MODULE_80__[\"default\"],\n  unescape: _lib_unescape__WEBPACK_IMPORTED_MODULE_81__[\"default\"],\n  stripLow: _lib_stripLow__WEBPACK_IMPORTED_MODULE_82__[\"default\"],\n  whitelist: _lib_whitelist__WEBPACK_IMPORTED_MODULE_83__[\"default\"],\n  blacklist: _lib_blacklist__WEBPACK_IMPORTED_MODULE_84__[\"default\"],\n  isWhitelisted: _lib_isWhitelisted__WEBPACK_IMPORTED_MODULE_85__[\"default\"],\n  normalizeEmail: _lib_normalizeEmail__WEBPACK_IMPORTED_MODULE_86__[\"default\"],\n  toString,\n  isSlug: _lib_isSlug__WEBPACK_IMPORTED_MODULE_87__[\"default\"],\n  isStrongPassword: _lib_isStrongPassword__WEBPACK_IMPORTED_MODULE_88__[\"default\"],\n  isTaxID: _lib_isTaxID__WEBPACK_IMPORTED_MODULE_89__[\"default\"],\n  isDate: _lib_isDate__WEBPACK_IMPORTED_MODULE_90__[\"default\"],\n  isLicensePlate: _lib_isLicensePlate__WEBPACK_IMPORTED_MODULE_91__[\"default\"],\n  isVAT: _lib_isVAT__WEBPACK_IMPORTED_MODULE_92__[\"default\"],\n  ibanLocales: _lib_isIBAN__WEBPACK_IMPORTED_MODULE_14__.locales,\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validator);\n\n\n//# sourceURL=webpack://validator/./src/index.js?");

/***/ }),

/***/ "./src/lib/alpha.js":
/*!**************************!*\
  !*** ./src/lib/alpha.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"alpha\": () => (/* binding */ alpha),\n/* harmony export */   \"alphanumeric\": () => (/* binding */ alphanumeric),\n/* harmony export */   \"arabicLocales\": () => (/* binding */ arabicLocales),\n/* harmony export */   \"commaDecimal\": () => (/* binding */ commaDecimal),\n/* harmony export */   \"decimal\": () => (/* binding */ decimal),\n/* harmony export */   \"dotDecimal\": () => (/* binding */ dotDecimal),\n/* harmony export */   \"englishLocales\": () => (/* binding */ englishLocales),\n/* harmony export */   \"farsiLocales\": () => (/* binding */ farsiLocales)\n/* harmony export */ });\nconst alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[А-Я]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'el-GR': /^[Α-ώ]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\n  'fi-FI': /^[A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'nb-NO': /^[A-ZÆØÅ]+$/i,\n  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[A-ZÆØÅ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๐\\s]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\n  'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[א-ת]+$/,\n  fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i,\n};\n\nconst alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[0-9А-Я]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]+$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'el-GR': /^[0-9Α-ω]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fi-FI': /^[0-9A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๙\\s]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\n  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[0-9א-ת]+$/,\n  fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i,\n};\n\nconst decimal = {\n  'en-US': '.',\n  ar: '٫',\n};\n\n\nconst englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\n\nfor (let locale, i = 0; i < englishLocales.length; i++) {\n  locale = `en-${englishLocales[i]}`;\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n}\n\n// Source: http://www.localeplanet.com/java/\nconst arabicLocales = [\n  'AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY',\n  'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE',\n];\n\nfor (let locale, i = 0; i < arabicLocales.length; i++) {\n  locale = `ar-${arabicLocales[i]}`;\n  alpha[locale] = alpha.ar;\n  alphanumeric[locale] = alphanumeric.ar;\n  decimal[locale] = decimal.ar;\n}\n\nconst farsiLocales = [\n  'IR', 'AF',\n];\n\nfor (let locale, i = 0; i < farsiLocales.length; i++) {\n  locale = `fa-${farsiLocales[i]}`;\n  alphanumeric[locale] = alphanumeric.fa;\n  decimal[locale] = decimal.ar;\n}\n\n// Source: https://en.wikipedia.org/wiki/Decimal_mark\nconst dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nconst commaDecimal = [\n  'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-CA', 'fr-FR',\n  'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT',\n  'ru-RU', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN',\n];\n\nfor (let i = 0; i < dotDecimal.length; i++) {\n  decimal[dotDecimal[i]] = decimal['en-US'];\n}\n\nfor (let i = 0; i < commaDecimal.length; i++) {\n  decimal[commaDecimal[i]] = ',';\n}\n\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\n\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT'];\n\n// see #862\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL'];\n\n// see #1455\nalpha['fa-AF'] = alpha.fa;\n\n\n//# sourceURL=webpack://validator/./src/lib/alpha.js?");

/***/ }),

/***/ "./src/lib/blacklist.js":
/*!******************************!*\
  !*** ./src/lib/blacklist.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ blacklist)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction blacklist(str, chars) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return str.replace(new RegExp(`[${chars}]+`, 'g'), '');\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/blacklist.js?");

/***/ }),

/***/ "./src/lib/contains.js":
/*!*****************************!*\
  !*** ./src/lib/contains.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ contains)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_toString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/toString */ \"./src/lib/util/toString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\n\nconst defaulContainsOptions = {\n  ignoreCase: false,\n  minOccurrences: 1,\n};\n\nfunction contains(str, elem, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, defaulContainsOptions);\n\n  if (options.ignoreCase) {\n    return str.toLowerCase().split((0,_util_toString__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(elem).toLowerCase()).length > options.minOccurrences;\n  }\n\n  return str.split((0,_util_toString__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(elem)).length > options.minOccurrences;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/contains.js?");

/***/ }),

/***/ "./src/lib/equals.js":
/*!***************************!*\
  !*** ./src/lib/equals.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction equals(str, comparison) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return str === comparison;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/equals.js?");

/***/ }),

/***/ "./src/lib/escape.js":
/*!***************************!*\
  !*** ./src/lib/escape.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ escape)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction escape(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return (str.replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\//g, '&#x2F;')\n    .replace(/\\\\/g, '&#x5C;')\n    .replace(/`/g, '&#96;'));\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/escape.js?");

/***/ }),

/***/ "./src/lib/isAfter.js":
/*!****************************!*\
  !*** ./src/lib/isAfter.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAfter)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _toDate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toDate */ \"./src/lib/toDate.js\");\n\n\n\nfunction isAfter(str, date = String(new Date())) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const comparison = (0,_toDate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date);\n  const original = (0,_toDate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str);\n  return !!(original && comparison && original > comparison);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isAfter.js?");

/***/ }),

/***/ "./src/lib/isAlpha.js":
/*!****************************!*\
  !*** ./src/lib/isAlpha.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAlpha),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _alpha__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alpha */ \"./src/lib/alpha.js\");\n\n\n\nfunction isAlpha(_str, locale = 'en-US', options = {}) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_str);\n\n  let str = _str;\n  const { ignore } = options;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(`[${ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&')}]`, 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha__WEBPACK_IMPORTED_MODULE_1__.alpha) {\n    return _alpha__WEBPACK_IMPORTED_MODULE_1__.alpha[locale].test(str);\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n}\n\nconst locales = Object.keys(_alpha__WEBPACK_IMPORTED_MODULE_1__.alpha);\n\n\n//# sourceURL=webpack://validator/./src/lib/isAlpha.js?");

/***/ }),

/***/ "./src/lib/isAlphanumeric.js":
/*!***********************************!*\
  !*** ./src/lib/isAlphanumeric.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAlphanumeric),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _alpha__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alpha */ \"./src/lib/alpha.js\");\n\n\n\nfunction isAlphanumeric(_str, locale = 'en-US', options = {}) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_str);\n\n  let str = _str;\n  const { ignore } = options;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(`[${ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&')}]`, 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha__WEBPACK_IMPORTED_MODULE_1__.alphanumeric) {\n    return _alpha__WEBPACK_IMPORTED_MODULE_1__.alphanumeric[locale].test(str);\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n}\n\nconst locales = Object.keys(_alpha__WEBPACK_IMPORTED_MODULE_1__.alphanumeric);\n\n\n//# sourceURL=webpack://validator/./src/lib/isAlphanumeric.js?");

/***/ }),

/***/ "./src/lib/isAscii.js":
/*!****************************!*\
  !*** ./src/lib/isAscii.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAscii)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable no-control-regex */\nconst ascii = /^[\\x00-\\x7F]+$/;\n/* eslint-enable no-control-regex */\n\nfunction isAscii(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return ascii.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isAscii.js?");

/***/ }),

/***/ "./src/lib/isBIC.js":
/*!**************************!*\
  !*** ./src/lib/isBIC.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBIC)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isISO31661Alpha2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isISO31661Alpha2 */ \"./src/lib/isISO31661Alpha2.js\");\n\n\n\n// https://en.wikipedia.org/wiki/ISO_9362\nconst isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\n\nfunction isBIC(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n  // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n  if (!_isISO31661Alpha2__WEBPACK_IMPORTED_MODULE_1__.CountryCodes.has(str.slice(4, 6).toUpperCase())) {\n    return false;\n  }\n\n  return isBICReg.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBIC.js?");

/***/ }),

/***/ "./src/lib/isBase32.js":
/*!*****************************!*\
  !*** ./src/lib/isBase32.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBase32)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst base32 = /^[A-Z2-7]+=*$/;\n\nfunction isBase32(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const len = str.length;\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBase32.js?");

/***/ }),

/***/ "./src/lib/isBase58.js":
/*!*****************************!*\
  !*** ./src/lib/isBase58.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBase58)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// Accepted chars - 123456789ABCDEFGH JKLMN PQRSTUVWXYZabcdefghijk mnopqrstuvwxyz\nconst base58Reg = /^[A-HJ-NP-Za-km-z1-9]*$/;\n\nfunction isBase58(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (base58Reg.test(str)) {\n    return true;\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBase58.js?");

/***/ }),

/***/ "./src/lib/isBase64.js":
/*!*****************************!*\
  !*** ./src/lib/isBase64.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBase64)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\nconst notBase64 = /[^A-Z0-9+\\/=]/i;\nconst urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\n\nconst defaultBase64Options = {\n  urlSafe: false,\n};\n\nfunction isBase64(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, defaultBase64Options);\n  const len = str.length;\n\n  if (options.urlSafe) {\n    return urlSafeBase64.test(str);\n  }\n\n  if (len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n\n  const firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 ||\n    firstPaddingChar === len - 1 ||\n    (firstPaddingChar === len - 2 && str[len - 1] === '=');\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBase64.js?");

/***/ }),

/***/ "./src/lib/isBefore.js":
/*!*****************************!*\
  !*** ./src/lib/isBefore.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBefore)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _toDate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toDate */ \"./src/lib/toDate.js\");\n\n\n\nfunction isBefore(str, date = String(new Date())) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const comparison = (0,_toDate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date);\n  const original = (0,_toDate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str);\n  return !!(original && comparison && original < comparison);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBefore.js?");

/***/ }),

/***/ "./src/lib/isBoolean.js":
/*!******************************!*\
  !*** ./src/lib/isBoolean.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBoolean)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst defaultOptions = { loose: false };\nconst strictBooleans = ['true', 'false', '1', '0'];\nconst looseBooleans = [...strictBooleans, 'yes', 'no'];\n\nfunction isBoolean(str, options = defaultOptions) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n  if (options.loose) {\n    return looseBooleans.includes(str.toLowerCase());\n  }\n\n  return strictBooleans.includes(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBoolean.js?");

/***/ }),

/***/ "./src/lib/isBtcAddress.js":
/*!*********************************!*\
  !*** ./src/lib/isBtcAddress.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isBtcAddress)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// supports Bech32 addresses\nconst bech32 = /^(bc1)[a-z0-9]{25,39}$/;\nconst base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\n\nfunction isBtcAddress(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  // check for bech32\n  if (str.startsWith('bc1')) {\n    return bech32.test(str);\n  }\n  return base58.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isBtcAddress.js?");

/***/ }),

/***/ "./src/lib/isByteLength.js":
/*!*********************************!*\
  !*** ./src/lib/isByteLength.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isByteLength)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  let min;\n  let max;\n  if (typeof (options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else { // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  const len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isByteLength.js?");

/***/ }),

/***/ "./src/lib/isCreditCard.js":
/*!*********************************!*\
  !*** ./src/lib/isCreditCard.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isCreditCard)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable max-len */\nconst creditCard = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14}|^(81[0-9]{14,17}))$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const sanitized = str.replace(/[- ]+/g, '');\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n  let sum = 0;\n  let digit;\n  let tmpNum;\n  let shouldDouble;\n  for (let i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, (i + 1));\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += ((tmpNum % 10) + 1);\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!((sum % 10) === 0 ? sanitized : false);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isCreditCard.js?");

/***/ }),

/***/ "./src/lib/isCurrency.js":
/*!*******************************!*\
  !*** ./src/lib/isCurrency.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isCurrency)\n/* harmony export */ });\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n\nfunction currencyRegex(options) {\n  let decimal_digits = `\\\\d{${options.digits_after_decimal[0]}}`;\n  options.digits_after_decimal.forEach((digit, index) => { if (index !== 0) decimal_digits = `${decimal_digits}|\\\\d{${digit}}`; });\n\n  const symbol =\n    `(${options.symbol.replace(/\\W/, m => `\\\\${m}`)})${(options.require_symbol ? '' : '?')}`,\n    negative = '-?',\n    whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n    whole_dollar_amount_with_sep = `[1-9]\\\\d{0,2}(\\\\${options.thousands_separator}\\\\d{3})*`,\n    valid_whole_dollar_amounts = [\n      '0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n    whole_dollar_amount = `(${valid_whole_dollar_amounts.join('|')})?`,\n    decimal_amount = `(\\\\${options.decimal_separator}(${decimal_digits}))${options.require_decimal ? '' : '?'}`;\n  let pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : '');\n\n  // default is negative sign before symbol, but there are two other options (besides parens)\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n  if (options.allow_negative_sign_placeholder) {\n    pattern = `( (?!\\\\-))?${pattern}`;\n  } else if (options.allow_space_after_symbol) {\n    pattern = ` ?${pattern}`;\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = `(\\\\(${pattern}\\\\)|${pattern})`;\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n  return new RegExp(`^(?!-? )(?=.*\\\\d)${pattern}$`);\n}\n\n\nconst default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false,\n};\n\nfunction isCurrency(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isCurrency.js?");

/***/ }),

/***/ "./src/lib/isDataURI.js":
/*!******************************!*\
  !*** ./src/lib/isDataURI.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isDataURI)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+]+$/i;\n\nconst validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\n\nconst validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\n\nfunction isDataURI(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  let data = str.split(',');\n  if (data.length < 2) {\n    return false;\n  }\n  const attributes = data.shift().trim().split(';');\n  const schemeAndMediaType = attributes.shift();\n  if (schemeAndMediaType.substr(0, 5) !== 'data:') {\n    return false;\n  }\n  const mediaType = schemeAndMediaType.substr(5);\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n  for (let i = 0; i < attributes.length; i++) {\n    if (\n      !(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') &&\n      !validAttribute.test(attributes[i])\n    ) {\n      return false;\n    }\n  }\n  for (let i = 0; i < data.length; i++) {\n    if (!validData.test(data[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isDataURI.js?");

/***/ }),

/***/ "./src/lib/isDate.js":
/*!***************************!*\
  !*** ./src/lib/isDate.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isDate)\n/* harmony export */ });\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\nconst default_date_options = {\n  format: 'YYYY/MM/DD',\n  delimiters: ['/', '-'],\n  strictMode: false,\n};\n\nfunction isValidFormat(format) {\n  return /(^(y{4}|y{2})[.\\/-](m{1,2})[.\\/-](d{1,2})$)|(^(m{1,2})[.\\/-](d{1,2})[.\\/-]((y{4}|y{2})$))|(^(d{1,2})[.\\/-](m{1,2})[.\\/-]((y{4}|y{2})$))/gi.test(format);\n}\n\nfunction zip(date, format) {\n  const zippedArr = [],\n    len = Math.min(date.length, format.length);\n\n  for (let i = 0; i < len; i++) {\n    zippedArr.push([date[i], format[i]]);\n  }\n\n  return zippedArr;\n}\n\nfunction isDate(input, options) {\n  if (typeof options === 'string') { // Allow backward compatbility for old format isDate(input [, format])\n    options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({ format: options }, default_date_options);\n  } else {\n    options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options, default_date_options);\n  }\n  if (typeof input === 'string' && isValidFormat(options.format)) {\n    const formatDelimiter = options.delimiters\n      .find(delimiter => options.format.indexOf(delimiter) !== -1);\n    const dateDelimiter = options.strictMode\n      ? formatDelimiter\n      : options.delimiters.find(delimiter => input.indexOf(delimiter) !== -1);\n    const dateAndFormat = zip(\n      input.split(dateDelimiter),\n      options.format.toLowerCase().split(formatDelimiter)\n    );\n    const dateObj = {};\n\n    for (const [dateWord, formatWord] of dateAndFormat) {\n      if (dateWord.length !== formatWord.length) {\n        return false;\n      }\n\n      dateObj[formatWord.charAt(0)] = dateWord;\n    }\n\n    return new Date(`${dateObj.m}/${dateObj.d}/${dateObj.y}`).getDate() === +dateObj.d;\n  }\n\n  if (!options.strictMode) {\n    return Object.prototype.toString.call(input) === '[object Date]' && isFinite(input);\n  }\n\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isDate.js?");

/***/ }),

/***/ "./src/lib/isDecimal.js":
/*!******************************!*\
  !*** ./src/lib/isDecimal.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isDecimal)\n/* harmony export */ });\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_includes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/includes */ \"./src/lib/util/includes.js\");\n/* harmony import */ var _alpha__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alpha */ \"./src/lib/alpha.js\");\n\n\n\n\n\nfunction decimalRegExp(options) {\n  const regExp = new RegExp(`^[-+]?([0-9]+)?(\\\\${_alpha__WEBPACK_IMPORTED_MODULE_0__.decimal[options.locale]}[0-9]{${options.decimal_digits}})${options.force_decimal ? '' : '?'}$`);\n  return regExp;\n}\n\nconst default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US',\n};\n\nconst blacklist = ['', '-', '+'];\n\nfunction isDecimal(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(options, default_decimal_options);\n  if (options.locale in _alpha__WEBPACK_IMPORTED_MODULE_0__.decimal) {\n    return !(0,_util_includes__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n  throw new Error(`Invalid locale '${options.locale}'`);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isDecimal.js?");

/***/ }),

/***/ "./src/lib/isDivisibleBy.js":
/*!**********************************!*\
  !*** ./src/lib/isDivisibleBy.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isDivisibleBy)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _toFloat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toFloat */ \"./src/lib/toFloat.js\");\n\n\n\nfunction isDivisibleBy(str, num) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return (0,_toFloat__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str) % parseInt(num, 10) === 0;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isDivisibleBy.js?");

/***/ }),

/***/ "./src/lib/isEAN.js":
/*!**************************!*\
  !*** ./src/lib/isEAN.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isEAN)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/**\n * The most commonly used EAN standard is\n * the thirteen-digit EAN-13, while the\n * less commonly used 8-digit EAN-8 barcode was\n * introduced for use on small packages.\n * Also EAN/UCC-14 is used for Grouping of individual\n * trade items above unit level(Intermediate, Carton or Pallet).\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\n * EAN consists of:\n * GS1 prefix, manufacturer code, product code and check digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\n * Reference: https://www.gtin.info/\n */\n\n\n\n/**\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\n */\nconst LENGTH_EAN_8 = 8;\nconst LENGTH_EAN_14 = 14;\nconst validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n\n\n/**\n * Get position weight given:\n * EAN length and digit index/position\n *\n * @param {number} length\n * @param {number} index\n * @return {number}\n */\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return (index % 2 === 0) ? 3 : 1;\n  }\n\n  return (index % 2 === 0) ? 1 : 3;\n}\n\n/**\n * Calculate EAN Check Digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\n *\n * @param {string} ean\n * @return {number}\n */\nfunction calculateCheckDigit(ean) {\n  const checksum = ean\n    .slice(0, -1)\n    .split('')\n    .map((char, index) => Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index))\n    .reduce((acc, partialSum) => acc + partialSum, 0);\n\n  const remainder = 10 - (checksum % 10);\n\n  return remainder < 10 ? remainder : 0;\n}\n\n/**\n * Check if string is valid EAN:\n * Matches EAN-8/EAN-13/EAN-14 regex\n * Has valid check digit.\n *\n * @param {string} str\n * @return {boolean}\n */\nfunction isEAN(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const actualCheckDigit = Number(str.slice(-1));\n\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isEAN.js?");

/***/ }),

/***/ "./src/lib/isEmail.js":
/*!****************************!*\
  !*** ./src/lib/isEmail.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isEmail)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n/* harmony import */ var _isByteLength__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isByteLength */ \"./src/lib/isByteLength.js\");\n/* harmony import */ var _isFQDN__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isFQDN */ \"./src/lib/isFQDN.js\");\n/* harmony import */ var _isIP__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isIP */ \"./src/lib/isIP.js\");\n\n\n\n\n\n\n\nconst default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: [],\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nconst splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nconst emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nconst gmailUserPart = /^[a-z\\d]+$/;\nconst quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nconst emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nconst quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nconst defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\nfunction validateDisplayName(display_name) {\n  const display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1');\n  // display name with only spaces is not valid\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  }\n\n  // check whether display name contains illegal character\n  const contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    }\n\n    // the quotes in display name must start with character symbol \\\n    const all_start_with_back_slash =\n      display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nfunction isEmail(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    const display_email = str.match(splitNameAddress);\n    if (display_email) {\n      let display_name = display_email[1];\n\n      // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, '');\n\n      // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.substr(0, display_name.length - 1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  const parts = str.split('@');\n  const domain = parts.pop();\n  const lower_domain = domain.toLowerCase();\n\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n\n  let user = parts.join('@');\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase();\n\n    // Removing sub-address from username before gmail validation\n    const username = user.split('+')[0];\n\n    // Dots are not included in gmail length restriction\n    if (!(0,_isByteLength__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(username.replace(/\\./g, ''), { min: 6, max: 30 })) {\n      return false;\n    }\n\n    const user_parts = username.split('.');\n    for (let i = 0; i < user_parts.length; i++) {\n      if (!gmailUserPart.test(user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (\n    !(0,_isByteLength__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(user, { max: 64 }) ||\n    !(0,_isByteLength__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(domain, { max: 254 }))\n  ) {\n    return false;\n  }\n\n  if (!(0,_isFQDN__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(domain, { require_tld: options.require_tld })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0,_isIP__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      let noBracketdomain = domain.substr(1, domain.length - 2);\n\n      if (noBracketdomain.length === 0 || !(0,_isIP__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ?\n      quotedEmailUserUtf8.test(user) :\n      quotedEmailUser.test(user);\n  }\n\n  const pattern = options.allow_utf8_local_part ?\n    emailUserUtf8Part : emailUserPart;\n\n  const user_parts = user.split('.');\n  for (let i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(`[${options.blacklisted_chars}]+`, 'g')) !== -1) return false;\n  }\n\n  return true;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isEmail.js?");

/***/ }),

/***/ "./src/lib/isEmpty.js":
/*!****************************!*\
  !*** ./src/lib/isEmpty.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isEmpty)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\nconst default_is_empty_options = {\n  ignore_whitespace: false,\n};\n\nfunction isEmpty(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, default_is_empty_options);\n\n  return (options.ignore_whitespace ? str.trim().length : str.length) === 0;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isEmpty.js?");

/***/ }),

/***/ "./src/lib/isEthereumAddress.js":
/*!**************************************!*\
  !*** ./src/lib/isEthereumAddress.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isEthereumAddress)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst eth = /^(0x)[0-9a-f]{40}$/i;\n\nfunction isEthereumAddress(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return eth.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isEthereumAddress.js?");

/***/ }),

/***/ "./src/lib/isFQDN.js":
/*!***************************!*\
  !*** ./src/lib/isFQDN.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isFQDN)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\nconst default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n};\n\nfunction isFQDN(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, default_fqdn_options);\n\n  /* Remove the optional trailing dot before checking validity */\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n\n  /* Remove the optional wildcard before checking validity */\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  const parts = str.split('.');\n  const tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    }\n\n    // disallow spaces\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  }\n\n  // reject numeric TLDs\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every((part) => {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    }\n\n    // disallow full-width chars\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    }\n\n    // disallow parts starting or ending with hyphen\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isFQDN.js?");

/***/ }),

/***/ "./src/lib/isFloat.js":
/*!****************************!*\
  !*** ./src/lib/isFloat.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isFloat),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _alpha__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alpha */ \"./src/lib/alpha.js\");\n\n\n\nfunction isFloat(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = options || {};\n  const float = new RegExp(`^(?:[-+])?(?:[0-9]+)?(?:\\\\${options.locale ? _alpha__WEBPACK_IMPORTED_MODULE_1__.decimal[options.locale] : '.'}[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$`);\n  if (str === '' || str === '.' || str === '-' || str === '+') {\n    return false;\n  }\n  const value = parseFloat(str.replace(',', '.'));\n  return float.test(str) &&\n    (!options.hasOwnProperty('min') || value >= options.min) &&\n    (!options.hasOwnProperty('max') || value <= options.max) &&\n    (!options.hasOwnProperty('lt') || value < options.lt) &&\n    (!options.hasOwnProperty('gt') || value > options.gt);\n}\n\nconst locales = Object.keys(_alpha__WEBPACK_IMPORTED_MODULE_1__.decimal);\n\n\n//# sourceURL=webpack://validator/./src/lib/isFloat.js?");

/***/ }),

/***/ "./src/lib/isFullWidth.js":
/*!********************************!*\
  !*** ./src/lib/isFullWidth.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isFullWidth),\n/* harmony export */   \"fullWidth\": () => (/* binding */ fullWidth)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n\nfunction isFullWidth(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return fullWidth.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isFullWidth.js?");

/***/ }),

/***/ "./src/lib/isHSL.js":
/*!**************************!*\
  !*** ./src/lib/isHSL.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isHSL)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n\nconst hslComma = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$/i;\nconst hslSpace = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$/i;\n\n\nfunction isHSL(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n  // Strip duplicate spaces before calling the validation regex (See  #1598 for more info)\n  const strippedStr = str.replace(/\\s+/g, ' ').replace(/\\s?(hsla?\\(|\\)|,)\\s?/ig, '$1');\n\n  if (strippedStr.indexOf(',') !== -1) {\n    return hslComma.test(strippedStr);\n  }\n\n  return hslSpace.test(strippedStr);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isHSL.js?");

/***/ }),

/***/ "./src/lib/isHalfWidth.js":
/*!********************************!*\
  !*** ./src/lib/isHalfWidth.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isHalfWidth),\n/* harmony export */   \"halfWidth\": () => (/* binding */ halfWidth)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n\nfunction isHalfWidth(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return halfWidth.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isHalfWidth.js?");

/***/ }),

/***/ "./src/lib/isHash.js":
/*!***************************!*\
  !*** ./src/lib/isHash.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isHash)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8,\n};\n\nfunction isHash(str, algorithm) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const hash = new RegExp(`^[a-fA-F0-9]{${lengths[algorithm]}}$`);\n  return hash.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isHash.js?");

/***/ }),

/***/ "./src/lib/isHexColor.js":
/*!*******************************!*\
  !*** ./src/lib/isHexColor.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isHexColor)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\n\nfunction isHexColor(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return hexcolor.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isHexColor.js?");

/***/ }),

/***/ "./src/lib/isHexadecimal.js":
/*!**********************************!*\
  !*** ./src/lib/isHexadecimal.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isHexadecimal)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\n\nfunction isHexadecimal(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return hexadecimal.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isHexadecimal.js?");

/***/ }),

/***/ "./src/lib/isIBAN.js":
/*!***************************!*\
  !*** ./src/lib/isIBAN.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIBAN),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/**\n * List of country codes with\n * corresponding IBAN regular expression\n * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n */\nconst ibanRegexThroughCountryCode = {\n  AD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\n  AE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\n  AL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  AT: /^(AT[0-9]{2})\\d{16}$/,\n  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  BA: /^(BA[0-9]{2})\\d{16}$/,\n  BE: /^(BE[0-9]{2})\\d{12}$/,\n  BG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\n  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\n  BR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\n  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  CH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  CR: /^(CR[0-9]{2})\\d{18}$/,\n  CY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  CZ: /^(CZ[0-9]{2})\\d{20}$/,\n  DE: /^(DE[0-9]{2})\\d{18}$/,\n  DK: /^(DK[0-9]{2})\\d{14}$/,\n  DO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\n  EE: /^(EE[0-9]{2})\\d{16}$/,\n  EG: /^(EG[0-9]{2})\\d{25}$/,\n  ES: /^(ES[0-9]{2})\\d{20}$/,\n  FI: /^(FI[0-9]{2})\\d{14}$/,\n  FO: /^(FO[0-9]{2})\\d{14}$/,\n  FR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  GB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\n  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\n  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\n  GL: /^(GL[0-9]{2})\\d{14}$/,\n  GR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\n  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\n  HR: /^(HR[0-9]{2})\\d{17}$/,\n  HU: /^(HU[0-9]{2})\\d{24}$/,\n  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\n  IL: /^(IL[0-9]{2})\\d{19}$/,\n  IQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\n  IR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\n  IS: /^(IS[0-9]{2})\\d{22}$/,\n  IT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  JO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\n  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\n  KZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\n  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\n  LI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  LT: /^(LT[0-9]{2})\\d{16}$/,\n  LU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\n  MC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\n  ME: /^(ME[0-9]{2})\\d{18}$/,\n  MK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\n  MR: /^(MR[0-9]{2})\\d{23}$/,\n  MT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\n  MU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\n  MZ: /^(MZ[0-9]{2})\\d{21}$/,\n  NL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\n  NO: /^(NO[0-9]{2})\\d{11}$/,\n  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  PL: /^(PL[0-9]{2})\\d{24}$/,\n  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\n  PT: /^(PT[0-9]{2})\\d{21}$/,\n  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\n  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\n  RS: /^(RS[0-9]{2})\\d{18}$/,\n  SA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\n  SC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\n  SE: /^(SE[0-9]{2})\\d{20}$/,\n  SI: /^(SI[0-9]{2})\\d{15}$/,\n  SK: /^(SK[0-9]{2})\\d{20}$/,\n  SM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  SV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  TL: /^(TL[0-9]{2})\\d{19}$/,\n  TN: /^(TN[0-9]{2})\\d{20}$/,\n  TR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\n  UA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\n  VA: /^(VA[0-9]{2})\\d{18}$/,\n  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  XK: /^(XK[0-9]{2})\\d{16}$/,\n};\n\n/**\n * Check whether string has correct universal IBAN format\n * The IBAN consists of up to 34 alphanumeric characters, as follows:\n * Country Code using ISO 3166-1 alpha-2, two letters\n * check digits, two digits and\n * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\n * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\n *\n * @param {string} str - string under validation\n * @return {boolean}\n */\nfunction hasValidIbanFormat(str) {\n  // Strip white spaces and hyphens\n  const strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\n  const isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\n\n  return (isoCountryCode in ibanRegexThroughCountryCode) &&\n    ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\n}\n\n/**\n   * Check whether string has valid IBAN Checksum\n   * by performing basic mod-97 operation and\n   * the remainder should equal 1\n   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\n   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\n   * -- Interpret the string as a decimal integer and\n   * -- compute the remainder on division by 97 (mod 97)\n   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\nfunction hasValidIbanChecksum(str) {\n  const strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\n  const rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\n  const alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, char => char.charCodeAt(0) - 55);\n\n  const remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g)\n    .reduce((acc, value) => Number(acc + value) % 97, '');\n\n  return remainder === 1;\n}\n\nfunction isIBAN(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n  return hasValidIbanFormat(str) && hasValidIbanChecksum(str);\n}\n\nconst locales = Object.keys(ibanRegexThroughCountryCode);\n\n\n//# sourceURL=webpack://validator/./src/lib/isIBAN.js?");

/***/ }),

/***/ "./src/lib/isIMEI.js":
/*!***************************!*\
  !*** ./src/lib/isIMEI.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIMEI)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n\nlet imeiRegexWithoutHypens = /^[0-9]{15}$/;\nlet imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\n\n\nfunction isIMEI(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = options || {};\n\n  // default regex for checking imei is the one without hyphens\n\n  let imeiRegex = imeiRegexWithoutHypens;\n\n  if (options.allow_hyphens) {\n    imeiRegex = imeiRegexWithHypens;\n  }\n\n\n  if (!imeiRegex.test(str)) {\n    return false;\n  }\n\n  str = str.replace(/-/g, '');\n\n  let sum = 0,\n    mul = 2,\n    l = 14;\n\n  for (let i = 0; i < l; i++) {\n    const digit = str.substring(l - i - 1, l - i);\n    const tp = parseInt(digit, 10) * mul;\n    if (tp >= 10) {\n      sum += (tp % 10) + 1;\n    } else {\n      sum += tp;\n    }\n    if (mul === 1) {\n      mul += 1;\n    } else {\n      mul -= 1;\n    }\n  }\n  const chk = ((10 - (sum % 10)) % 10);\n  if (chk !== parseInt(str.substring(14, 15), 10)) {\n    return false;\n  }\n  return true;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isIMEI.js?");

/***/ }),

/***/ "./src/lib/isIP.js":
/*!*************************!*\
  !*** ./src/lib/isIP.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIP)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nconst IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst IPv4AddressFormat = `(${IPv4SegmentFormat}[.]){3}${IPv4SegmentFormat}`;\nconst IPv4AddressRegExp = new RegExp(`^${IPv4AddressFormat}$`);\n\nconst IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6AddressRegExp = new RegExp('^(' +\n  `(?:${IPv6SegmentFormat}:){7}(?:${IPv6SegmentFormat}|:)|` +\n  `(?:${IPv6SegmentFormat}:){6}(?:${IPv4AddressFormat}|:${IPv6SegmentFormat}|:)|` +\n  `(?:${IPv6SegmentFormat}:){5}(?::${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,2}|:)|` +\n  `(?:${IPv6SegmentFormat}:){4}(?:(:${IPv6SegmentFormat}){0,1}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,3}|:)|` +\n  `(?:${IPv6SegmentFormat}:){3}(?:(:${IPv6SegmentFormat}){0,2}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,4}|:)|` +\n  `(?:${IPv6SegmentFormat}:){2}(?:(:${IPv6SegmentFormat}){0,3}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,5}|:)|` +\n  `(?:${IPv6SegmentFormat}:){1}(?:(:${IPv6SegmentFormat}){0,4}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,6}|:)|` +\n  `(?::((?::${IPv6SegmentFormat}){0,5}:${IPv4AddressFormat}|(?::${IPv6SegmentFormat}){1,7}|:))` +\n  ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str, version = '') {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  version = String(version);\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n    const parts = str.split('.').sort((a, b) => a - b);\n    return parts[3] <= 255;\n  }\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isIP.js?");

/***/ }),

/***/ "./src/lib/isIPRange.js":
/*!******************************!*\
  !*** ./src/lib/isIPRange.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIPRange)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isIP__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isIP */ \"./src/lib/isIP.js\");\n\n\n\nconst subnetMaybe = /^\\d{1,3}$/;\nconst v4Subnet = 32;\nconst v6Subnet = 128;\n\nfunction isIPRange(str, version = '') {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const parts = str.split('/');\n\n  // parts[0] -> ip, parts[1] -> subnet\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  }\n\n  // Disallow preceding 0 i.e. 01, 02, ...\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n\n  const isValidIP = (0,_isIP__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parts[0], version);\n  if (!isValidIP) {\n    return false;\n  }\n\n  // Define valid subnet according to IP's version\n  let expectedSubnet = null;\n  switch (String(version)) {\n    case '4':\n      expectedSubnet = v4Subnet;\n      break;\n\n    case '6':\n      expectedSubnet = v6Subnet;\n      break;\n\n    default:\n      expectedSubnet = (0,_isIP__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parts[0], '6') ? v6Subnet : v4Subnet;\n  }\n\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isIPRange.js?");

/***/ }),

/***/ "./src/lib/isISBN.js":
/*!***************************!*\
  !*** ./src/lib/isISBN.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isISBN)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\nconst isbn13Maybe = /^(?:[0-9]{13})$/;\nconst factor = [1, 3];\n\nfunction isISBN(str, version = '') {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  version = String(version);\n  if (!version) {\n    return isISBN(str, 10) || isISBN(str, 13);\n  }\n  const sanitized = str.replace(/[\\s-]+/g, '');\n  let checksum = 0;\n  let i;\n  if (version === '10') {\n    if (!isbn10Maybe.test(sanitized)) {\n      return false;\n    }\n    for (i = 0; i < 9; i++) {\n      checksum += (i + 1) * sanitized.charAt(i);\n    }\n    if (sanitized.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitized.charAt(9);\n    }\n    if ((checksum % 11) === 0) {\n      return !!sanitized;\n    }\n  } else if (version === '13') {\n    if (!isbn13Maybe.test(sanitized)) {\n      return false;\n    }\n    for (i = 0; i < 12; i++) {\n      checksum += factor[i % 2] * sanitized.charAt(i);\n    }\n    if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {\n      return !!sanitized;\n    }\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isISBN.js?");

/***/ }),

/***/ "./src/lib/isISIN.js":
/*!***************************!*\
  !*** ./src/lib/isISIN.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isISIN)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\n// this link details how the check digit is calculated:\n// https://www.isin.org/isin-format/. it is a little bit\n// odd in that it works with digits, not numbers. in order\n// to make only one pass through the ISIN characters, the\n// each alpha character is handled as 2 characters within\n// the loop.\n\nfunction isISIN(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  let double = true;\n  let sum = 0;\n  // convert values\n  for (let i = str.length - 2; i >= 0; i--) {\n    if (str[i] >= 'A' && str[i] <= 'Z') {\n      const value = str[i].charCodeAt(0) - 55;\n      const lo = value % 10;\n      const hi = Math.trunc(value / 10);\n      // letters have two digits, so handle the low order\n      // and high order digits separately.\n      for (const digit of [lo, hi]) {\n        if (double) {\n          if (digit >= 5) {\n            sum += 1 + ((digit - 5) * 2);\n          } else {\n            sum += digit * 2;\n          }\n        } else {\n          sum += digit;\n        }\n        double = !double;\n      }\n    } else {\n      const digit = str[i].charCodeAt(0) - '0'.charCodeAt(0);\n      if (double) {\n        if (digit >= 5) {\n          sum += 1 + ((digit - 5) * 2);\n        } else {\n          sum += digit * 2;\n        }\n      } else {\n        sum += digit;\n      }\n      double = !double;\n    }\n  }\n\n  const check = (Math.trunc(((sum + 9) / 10)) * 10) - sum;\n\n  return +str[str.length - 1] === check;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isISIN.js?");

/***/ }),

/***/ "./src/lib/isISO31661Alpha2.js":
/*!*************************************!*\
  !*** ./src/lib/isISO31661Alpha2.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CountryCodes\": () => (/* binding */ CountryCodes),\n/* harmony export */   \"default\": () => (/* binding */ isISO31661Alpha2)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nconst validISO31661Alpha2CountriesCodes = new Set([\n  'AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ',\n  'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ',\n  'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ',\n  'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ',\n  'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET',\n  'FI', 'FJ', 'FK', 'FM', 'FO', 'FR',\n  'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY',\n  'HK', 'HM', 'HN', 'HR', 'HT', 'HU',\n  'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT',\n  'JE', 'JM', 'JO', 'JP',\n  'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ',\n  'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY',\n  'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ',\n  'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ',\n  'OM',\n  'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY',\n  'QA',\n  'RE', 'RO', 'RS', 'RU', 'RW',\n  'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ',\n  'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ',\n  'UA', 'UG', 'UM', 'US', 'UY', 'UZ',\n  'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU',\n  'WF', 'WS',\n  'YE', 'YT',\n  'ZA', 'ZM', 'ZW',\n]);\n\nfunction isISO31661Alpha2(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());\n}\n\nconst CountryCodes = validISO31661Alpha2CountriesCodes;\n\n\n//# sourceURL=webpack://validator/./src/lib/isISO31661Alpha2.js?");

/***/ }),

/***/ "./src/lib/isISO31661Alpha3.js":
/*!*************************************!*\
  !*** ./src/lib/isISO31661Alpha3.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isISO31661Alpha3)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nconst validISO31661Alpha3CountriesCodes = new Set([\n  'AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE',\n  'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA',\n  'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK',\n  'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM',\n  'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB',\n  'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI',\n  'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN',\n  'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE',\n  'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX',\n  'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC',\n  'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN',\n  'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM',\n  'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD',\n  'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL',\n  'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT',\n  'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE',\n]);\n\nfunction isISO31661Alpha3(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isISO31661Alpha3.js?");

/***/ }),

/***/ "./src/lib/isISO4217.js":
/*!******************************!*\
  !*** ./src/lib/isISO4217.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CurrencyCodes\": () => (/* binding */ CurrencyCodes),\n/* harmony export */   \"default\": () => (/* binding */ isISO4217)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// from https://en.wikipedia.org/wiki/ISO_4217\nconst validISO4217CurrencyCodes = new Set([\n  'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN',\n  'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD',\n  'CAD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'CNY', 'COP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK',\n  'DJF', 'DKK', 'DOP', 'DZD',\n  'EGP', 'ERN', 'ETB', 'EUR',\n  'FJD', 'FKP',\n  'GBP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD',\n  'HKD', 'HNL', 'HRK', 'HTG', 'HUF',\n  'IDR', 'ILS', 'INR', 'IQD', 'IRR', 'ISK',\n  'JMD', 'JOD', 'JPY',\n  'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT',\n  'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD',\n  'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN',\n  'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD',\n  'OMR',\n  'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG',\n  'QAR',\n  'RON', 'RSD', 'RUB', 'RWF',\n  'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SVC', 'SYP', 'SZL',\n  'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS',\n  'UAH', 'UGX', 'USD', 'USN', 'UYI', 'UYU', 'UYW', 'UZS',\n  'VES', 'VND', 'VUV',\n  'WST',\n  'XAF', 'XAG', 'XAU', 'XBA', 'XBB', 'XBC', 'XBD', 'XCD', 'XDR', 'XOF', 'XPD', 'XPF', 'XPT', 'XSU', 'XTS', 'XUA', 'XXX',\n  'YER',\n  'ZAR', 'ZMW', 'ZWL',\n]);\n\nfunction isISO4217(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return validISO4217CurrencyCodes.has(str.toUpperCase());\n}\n\nconst CurrencyCodes = validISO4217CurrencyCodes;\n\n\n//# sourceURL=webpack://validator/./src/lib/isISO4217.js?");

/***/ }),

/***/ "./src/lib/isISO8601.js":
/*!******************************!*\
  !*** ./src/lib/isISO8601.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isISO8601)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nconst iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n// same as above, except with a strict 'T' separator between date and time\nconst iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\nconst isValidDate = (str) => {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  const ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n  if (ordinalMatch) {\n    const oYear = Number(ordinalMatch[1]);\n    const oDay = Number(ordinalMatch[2]);\n    // if is leap year\n    if ((oYear % 4 === 0 && oYear % 100 !== 0) || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n  const match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  const year = match[1];\n  const month = match[2];\n  const day = match[3];\n  const monthString = month ? `0${month}`.slice(-2) : month;\n  const dayString = day ? `0${day}`.slice(-2) : day;\n\n  // create a date object and compare\n  const d = new Date(`${year}-${monthString || '01'}-${dayString || '01'}`);\n  if (month && day) {\n    return d.getUTCFullYear() === year\n      && (d.getUTCMonth() + 1) === month\n      && d.getUTCDate() === day;\n  }\n  return true;\n};\n\nfunction isISO8601(str, options = {}) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isISO8601.js?");

/***/ }),

/***/ "./src/lib/isISRC.js":
/*!***************************!*\
  !*** ./src/lib/isISRC.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isISRC)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// see http://isrc.ifpi.org/en/isrc-standard/code-syntax\nconst isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\n\nfunction isISRC(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return isrc.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isISRC.js?");

/***/ }),

/***/ "./src/lib/isISSN.js":
/*!***************************!*\
  !*** ./src/lib/isISSN.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isISSN)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str, options = {}) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  let testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n  if (!testIssn.test(str)) {\n    return false;\n  }\n  const digits = str.replace('-', '').toUpperCase();\n  let checksum = 0;\n  for (let i = 0; i < digits.length; i++) {\n    const digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n  return checksum % 11 === 0;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isISSN.js?");

/***/ }),

/***/ "./src/lib/isIdentityCard.js":
/*!***********************************!*\
  !*** ./src/lib/isIdentityCard.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIdentityCard)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isInt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isInt */ \"./src/lib/isInt.js\");\n\n\n\nconst validators = {\n  PL: (str) => {\n    (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n    const weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0,\n    };\n\n    if (str != null && str.length === 11 && (0,_isInt__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str, { allow_leading_zeroes: true })) {\n      const digits = str.split('').slice(0, -1);\n      const sum = digits.reduce((acc, digit, index) =>\n        acc + (Number(digit) * weightOfDigits[index + 1]), 0);\n\n      const modulo = sum % 10;\n      const lastDigit = Number(str.charAt(str.length - 1));\n\n      if ((modulo === 0 && lastDigit === 0) || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  ES: (str) => {\n    (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n    const DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n\n    const charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2,\n    };\n\n    const controlDigits = [\n      'T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B',\n      'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E',\n    ];\n\n    // sanitize user input\n    const sanitized = str.trim().toUpperCase();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    // validate the control digit\n    const number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, char => charsValue[char]);\n\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: (str) => {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n    if (str.length !== 11) {\n      return false;\n    }\n\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n\n    const checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n\n    const idAsNumber = (parseInt(str.slice(0, 6), 10) * 1000) + parseInt(str.slice(7, 10), 10);\n    const remainder = idAsNumber % 31;\n    const checkDigit = checkDigits[remainder];\n\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: (str) => {\n    const DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/;\n\n    // multiplication table\n    const d = [\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n      [1, 2, 3, 4, 0, 6, 7, 8, 9, 5],\n      [2, 3, 4, 0, 1, 7, 8, 9, 5, 6],\n      [3, 4, 0, 1, 2, 8, 9, 5, 6, 7],\n      [4, 0, 1, 2, 3, 9, 5, 6, 7, 8],\n      [5, 9, 8, 7, 6, 0, 4, 3, 2, 1],\n      [6, 5, 9, 8, 7, 1, 0, 4, 3, 2],\n      [7, 6, 5, 9, 8, 2, 1, 0, 4, 3],\n      [8, 7, 6, 5, 9, 3, 2, 1, 0, 4],\n      [9, 8, 7, 6, 5, 4, 3, 2, 1, 0],\n    ];\n\n    // permutation table\n    const p = [\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n      [1, 5, 7, 6, 2, 8, 3, 0, 9, 4],\n      [5, 8, 0, 3, 7, 9, 6, 1, 4, 2],\n      [8, 9, 1, 6, 0, 4, 3, 5, 2, 7],\n      [9, 4, 5, 3, 1, 2, 6, 8, 7, 0],\n      [4, 2, 8, 6, 5, 7, 3, 9, 0, 1],\n      [2, 7, 9, 3, 8, 0, 6, 4, 1, 5],\n      [7, 0, 4, 6, 9, 1, 3, 2, 5, 8],\n    ];\n\n    // sanitize user input\n    const sanitized = str.trim();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n    let c = 0;\n    let invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n\n    invertedArray.forEach((val, i) => {\n      c = d[c][p[(i % 8)][val]];\n    });\n\n    return c === 0;\n  },\n  IR: (str) => {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = (`0000${str}`).substr(str.length - 6);\n\n    if (parseInt(str.substr(3, 6), 10) === 0) return false;\n\n    const lastNumber = parseInt(str.substr(9, 1), 10);\n    let sum = 0;\n\n    for (let i = 0; i < 9; i++) {\n      sum += parseInt(str.substr(i, 1), 10) * (10 - i);\n    }\n\n    sum %= 11;\n\n    return (\n      (sum < 2 && lastNumber === sum) || (sum >= 2 && lastNumber === 11 - sum)\n    );\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n    return str.search(/C[A-Z]\\d{5}[A-Z]{2}/is) > -1;\n  },\n  NO: (str) => {\n    const sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false;\n\n    // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n    const f = sanitized.split('').map(Number);\n    let k1 = (11 - (((3 * f[0]) + (7 * f[1]) + (6 * f[2])\n      + (1 * f[3]) + (8 * f[4]) + (9 * f[5]) + (4 * f[6])\n      + (5 * f[7]) + (2 * f[8])) % 11)) % 11;\n    let k2 = (11 - (((5 * f[0]) + (4 * f[1]) + (3 * f[2])\n      + (2 * f[3]) + (7 * f[4]) + (6 * f[5]) + (5 * f[6])\n      + (4 * f[7]) + (3 * f[8]) + (2 * k1)) % 11)) % 11;\n\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: (str) => {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false;\n\n    // validate check digit\n    let sum = 0;\n    for (let i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n    return str[12] === ((11 - (sum % 11)) % 10).toString();\n  },\n  LK: (str) => {\n    const old_nic = /^[1-9]\\d{8}[vx]$/i;\n    const new_nic = /^[1-9]\\d{11}$/i;\n\n    if (str.length === 10 && old_nic.test(str)) return true;\n    else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': (str) => {\n    const DNI = /^\\d{9}$/;\n\n    // sanitize user input\n    const sanitized = str.trim();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    const id = sanitized;\n\n    let sum = 0,\n      incNum;\n    for (let i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * ((i % 2) + 1); // Multiply number by 1 or 2\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n    return sum % 10 === 0;\n  },\n  'ar-LY': (str) => {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    const NIN = /^(1|2)\\d{11}$/;\n\n    // sanitize user input\n    const sanitized = str.trim();\n\n    // validate the data structure\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n    return true;\n  },\n  'ar-TN': (str) => {\n    const DNI = /^\\d{8}$/;\n\n    // sanitize user input\n    const sanitized = str.trim();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n    return true;\n  },\n  'zh-CN': (str) => {\n    const provincesAndCities = [\n      '11', // 北京\n      '12', // 天津\n      '13', // 河北\n      '14', // 山西\n      '15', // 内蒙古\n      '21', // 辽宁\n      '22', // 吉林\n      '23', // 黑龙江\n      '31', // 上海\n      '32', // 江苏\n      '33', // 浙江\n      '34', // 安徽\n      '35', // 福建\n      '36', // 江西\n      '37', // 山东\n      '41', // 河南\n      '42', // 湖北\n      '43', // 湖南\n      '44', // 广东\n      '45', // 广西\n      '46', // 海南\n      '50', // 重庆\n      '51', // 四川\n      '52', // 贵州\n      '53', // 云南\n      '54', // 西藏\n      '61', // 陕西\n      '62', // 甘肃\n      '63', // 青海\n      '64', // 宁夏\n      '65', // 新疆\n      '71', // 台湾\n      '81', // 香港\n      '82', // 澳门\n      '91', // 国外\n    ];\n\n    const powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n\n    const parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n    const checkAddressCode = addressCode => provincesAndCities.includes(addressCode);\n\n    const checkBirthDayCode = (birDayCode) => {\n      const yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      const mm = parseInt(birDayCode.substring(4, 6), 10);\n      const dd = parseInt(birDayCode.substring(6), 10);\n      const xdata = new Date(yyyy, mm - 1, dd);\n      if (xdata > new Date()) {\n        return false;\n        // eslint-disable-next-line max-len\n      } else if ((xdata.getFullYear() === yyyy) && (xdata.getMonth() === mm - 1) && (xdata.getDate() === dd)) {\n        return true;\n      }\n      return false;\n    };\n\n    const getParityBit = (idCardNo) => {\n      let id17 = idCardNo.substring(0, 17);\n\n      let power = 0;\n      for (let i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n\n      let mod = power % 11;\n      return parityBit[mod];\n    };\n\n    const checkParityBit = idCardNo => getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n\n\n    const check15IdCardNo = (idCardNo) => {\n      let check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      let addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      let birDayCode = `19${idCardNo.substring(6, 12)}`;\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n\n    const check18IdCardNo = (idCardNo) => {\n      let check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      let addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      let birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n\n    const checkIdCardNo = (idCardNo) => {\n      let check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n      return check18IdCardNo(idCardNo);\n    };\n    return checkIdCardNo(str);\n  },\n  'zh-TW': (str) => {\n    const ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33,\n    };\n\n    const sanitized = str.trim().toUpperCase();\n\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n\n    return Array.from(sanitized).reduce((sum, number, index) => {\n      if (index === 0) {\n        const code = ALPHABET_CODES[number];\n\n        return ((code % 10) * 9) + Math.floor(code / 10);\n      }\n\n      if (index === 9) {\n        return ((10 - (sum % 10)) - Number(number)) % 10 === 0;\n      }\n\n      return sum + (Number(number) * (9 - index));\n    }, 0);\n  },\n};\n\nfunction isIdentityCard(str, locale) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (const key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        const validator = validators[key];\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isIdentityCard.js?");

/***/ }),

/***/ "./src/lib/isIn.js":
/*!*************************!*\
  !*** ./src/lib/isIn.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIn)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_toString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/toString */ \"./src/lib/util/toString.js\");\n\n\n\nfunction isIn(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  let i;\n  if (Object.prototype.toString.call(options) === '[object Array]') {\n    const array = [];\n    for (i in options) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if ({}.hasOwnProperty.call(options, i)) {\n        array[i] = (0,_util_toString__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options[i]);\n      }\n    }\n    return array.indexOf(str) >= 0;\n  } else if (typeof options === 'object') {\n    return options.hasOwnProperty(str);\n  } else if (options && typeof options.indexOf === 'function') {\n    return options.indexOf(str) >= 0;\n  }\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isIn.js?");

/***/ }),

/***/ "./src/lib/isInt.js":
/*!**************************!*\
  !*** ./src/lib/isInt.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isInt)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nconst intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = options || {};\n\n  // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n  let regex = (\n    options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ?\n      int : intLeadingZeroes\n  );\n\n  // Check min/max/lt/gt\n  let minCheckPassed = (!options.hasOwnProperty('min') || str >= options.min);\n  let maxCheckPassed = (!options.hasOwnProperty('max') || str <= options.max);\n  let ltCheckPassed = (!options.hasOwnProperty('lt') || str < options.lt);\n  let gtCheckPassed = (!options.hasOwnProperty('gt') || str > options.gt);\n\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isInt.js?");

/***/ }),

/***/ "./src/lib/isJSON.js":
/*!***************************!*\
  !*** ./src/lib/isJSON.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isJSON)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\nconst default_json_options = {\n  allow_primitives: false,\n};\n\nfunction isJSON(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  try {\n    options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, default_json_options);\n    let primitives = [];\n    if (options.allow_primitives) {\n      primitives = [null, false, true];\n    }\n\n    const obj = JSON.parse(str);\n    return primitives.includes(obj) || (!!obj && typeof obj === 'object');\n  } catch (e) { /* ignore */ }\n  return false;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isJSON.js?");

/***/ }),

/***/ "./src/lib/isJWT.js":
/*!**************************!*\
  !*** ./src/lib/isJWT.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isJWT)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isBase64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isBase64 */ \"./src/lib/isBase64.js\");\n\n\n\nfunction isJWT(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n  const dotSplit = str.split('.');\n  const len = dotSplit.length;\n\n  if (len > 3 || len < 2) {\n    return false;\n  }\n\n  return dotSplit.reduce((acc, currElem) => acc && (0,_isBase64__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(currElem, { urlSafe: true }), true);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isJWT.js?");

/***/ }),

/***/ "./src/lib/isLatLong.js":
/*!******************************!*\
  !*** ./src/lib/isLatLong.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isLatLong)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\nconst lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nconst long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\n\nconst latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nconst longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\n\nconst defaultLatLongOptions = {\n  checkDMS: false,\n};\n\nfunction isLatLong(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, defaultLatLongOptions);\n\n  if (!str.includes(',')) return false;\n  const pair = str.split(',');\n  if ((pair[0].startsWith('(') && !pair[1].endsWith(')'))\n    || (pair[1].endsWith(')') && !pair[0].startsWith('('))) return false;\n\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n  return lat.test(pair[0]) && long.test(pair[1]);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isLatLong.js?");

/***/ }),

/***/ "./src/lib/isLength.js":
/*!*****************************!*\
  !*** ./src/lib/isLength.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isLength)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  let min;\n  let max;\n  if (typeof (options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else { // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n  const surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  const len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isLength.js?");

/***/ }),

/***/ "./src/lib/isLicensePlate.js":
/*!***********************************!*\
  !*** ./src/lib/isLicensePlate.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isLicensePlate)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\r\n\r\nconst validators = {\r\n  'cs-CZ': str =>\r\n    /^(([ABCDEFHKIJKLMNPRSTUVXYZ]|[0-9])-?){5,8}$/.test(str),\r\n  'de-DE': str =>\r\n    /^((AW|UL|AK|GA|AÖ|LF|AZ|AM|AS|ZE|AN|AB|A|KG|KH|BA|EW|BZ|HY|KM|BT|HP|B|BC|BI|BO|FN|TT|ÜB|BN|AH|BS|FR|HB|ZZ|BB|BK|BÖ|OC|OK|CW|CE|C|CO|LH|CB|KW|LC|LN|DA|DI|DE|DH|SY|NÖ|DO|DD|DU|DN|D|EI|EA|EE|FI|EM|EL|EN|PF|ED|EF|ER|AU|ZP|E|ES|NT|EU|FL|FO|FT|FF|F|FS|FD|FÜ|GE|G|GI|GF|GS|ZR|GG|GP|GR|NY|ZI|GÖ|GZ|GT|HA|HH|HM|HU|WL|HZ|WR|RN|HK|HD|HN|HS|GK|HE|HF|RZ|HI|HG|HO|HX|IK|IL|IN|J|JL|KL|KA|KS|KF|KE|KI|KT|KO|KN|KR|KC|KU|K|LD|LL|LA|L|OP|LM|LI|LB|LU|LÖ|HL|LG|MD|GN|MZ|MA|ML|MR|MY|AT|DM|MC|NZ|RM|RG|MM|ME|MB|MI|FG|DL|HC|MW|RL|MK|MG|MÜ|WS|MH|M|MS|NU|NB|ND|NM|NK|NW|NR|NI|NF|DZ|EB|OZ|TG|TO|N|OA|GM|OB|CA|EH|FW|OF|OL|OE|OG|BH|LR|OS|AA|GD|OH|KY|NP|WK|PB|PA|PE|PI|PS|P|PM|PR|RA|RV|RE|R|H|SB|WN|RS|RD|RT|BM|NE|GV|RP|SU|GL|RO|GÜ|RH|EG|RW|PN|SK|MQ|RU|SZ|RI|SL|SM|SC|HR|FZ|VS|SW|SN|CR|SE|SI|SO|LP|SG|NH|SP|IZ|ST|BF|TE|HV|OD|SR|S|AC|DW|ZW|TF|TS|TR|TÜ|UM|PZ|TP|UE|UN|UH|MN|KK|VB|V|AE|PL|RC|VG|GW|PW|VR|VK|KB|WA|WT|BE|WM|WE|AP|MO|WW|FB|WZ|WI|WB|JE|WF|WO|W|WÜ|BL|Z|GC)[- ]?[A-Z]{1,2}[- ]?\\d{1,4}|(AIC|FDB|ABG|SLN|SAW|KLZ|BUL|ESB|NAB|SUL|WST|ABI|AZE|BTF|KÖT|DKB|FEU|ROT|ALZ|SMÜ|WER|AUR|NOR|DÜW|BRK|HAB|TÖL|WOR|BAD|BAR|BER|BIW|EBS|KEM|MÜB|PEG|BGL|BGD|REI|WIL|BKS|BIR|WAT|BOR|BOH|BOT|BRB|BLK|HHM|NEB|NMB|WSF|LEO|HDL|WMS|WZL|BÜS|CHA|KÖZ|ROD|WÜM|CLP|NEC|COC|ZEL|COE|CUX|DAH|LDS|DEG|DEL|RSL|DLG|DGF|LAN|HEI|MED|DON|KIB|ROK|JÜL|MON|SLE|EBE|EIC|HIG|WBS|BIT|PRÜ|LIB|EMD|WIT|ERH|HÖS|ERZ|ANA|ASZ|MAB|MEK|STL|SZB|FDS|HCH|HOR|WOL|FRG|GRA|WOS|FRI|FFB|GAP|GER|BRL|CLZ|GTH|NOH|HGW|GRZ|LÖB|NOL|WSW|DUD|HMÜ|OHA|KRU|HAL|HAM|HBS|QLB|HVL|NAU|HAS|EBN|GEO|HOH|HDH|ERK|HER|WAN|HEF|ROF|HBN|ALF|HSK|USI|NAI|REH|SAN|KÜN|ÖHR|HOL|WAR|ARN|BRG|GNT|HOG|WOH|KEH|MAI|PAR|RID|ROL|KLE|GEL|KUS|KYF|ART|SDH|LDK|DIL|MAL|VIB|LER|BNA|GHA|GRM|MTL|WUR|LEV|LIF|STE|WEL|LIP|VAI|LUP|HGN|LBZ|LWL|PCH|STB|DAN|MKK|SLÜ|MSP|TBB|MGH|MTK|BIN|MSH|EIL|HET|SGH|BID|MYK|MSE|MST|MÜR|WRN|MEI|GRH|RIE|MZG|MIL|OBB|BED|FLÖ|MOL|FRW|SEE|SRB|AIB|MOS|BCH|ILL|SOB|NMS|NEA|SEF|UFF|NEW|VOH|NDH|TDO|NWM|GDB|GVM|WIS|NOM|EIN|GAN|LAU|HEB|OHV|OSL|SFB|ERB|LOS|BSK|KEL|BSB|MEL|WTL|OAL|FÜS|MOD|OHZ|OPR|BÜR|PAF|PLÖ|CAS|GLA|REG|VIT|ECK|SIM|GOA|EMS|DIZ|GOH|RÜD|SWA|NES|KÖN|MET|LRO|BÜZ|DBR|ROS|TET|HRO|ROW|BRV|HIP|PAN|GRI|SHK|EIS|SRO|SOK|LBS|SCZ|MER|QFT|SLF|SLS|HOM|SLK|ASL|BBG|SBK|SFT|SHG|MGN|MEG|ZIG|SAD|NEN|OVI|SHA|BLB|SIG|SON|SPN|FOR|GUB|SPB|IGB|WND|STD|STA|SDL|OBG|HST|BOG|SHL|PIR|FTL|SEB|SÖM|SÜW|TIR|SAB|TUT|ANG|SDT|LÜN|LSZ|MHL|VEC|VER|VIE|OVL|ANK|OVP|SBG|UEM|UER|WLG|GMN|NVP|RDG|RÜG|DAU|FKB|WAF|WAK|SLZ|WEN|SOG|APD|WUG|GUN|ESW|WIZ|WES|DIN|BRA|BÜD|WHV|HWI|GHC|WTM|WOB|WUN|MAK|SEL|OCH|HOT|WDA)[- ]?(([A-Z][- ]?\\d{1,4})|([A-Z]{2}[- ]?\\d{1,3})))[- ]?(E|H)?$/.test(str),\r\n  'de-LI': str => /^FL[- ]?\\d{1,5}[UZ]?$/.test(str),\r\n  'fi-FI': str => /^(?=.{4,7})(([A-Z]{1,3}|[0-9]{1,3})[\\s-]?([A-Z]{1,3}|[0-9]{1,5}))$/.test(str),\r\n  'pt-PT': str =>\r\n    /^([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})$/.test(str),\r\n  'sq-AL': str =>\r\n    /^[A-Z]{2}[- ]?((\\d{3}[- ]?(([A-Z]{2})|T))|(R[- ]?\\d{3}))$/.test(str),\r\n  'pt-BR': str =>\r\n    /^[A-Z]{3}[ -]?[0-9][A-Z][0-9]{2}|[A-Z]{3}[ -]?[0-9]{4}$/.test(str),\r\n  'sv-SE': str =>\r\n    /^[A-HJ-PR-UW-Z]{3} ?[\\d]{2}[A-HJ-PR-UW-Z1-9]$|(^[A-ZÅÄÖ ]{2,7}$)/.test(str.trim()),\r\n};\r\n\r\nfunction isLicensePlate(str, locale) {\r\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\r\n  if (locale in validators) {\r\n    return validators[locale](str);\r\n  } else if (locale === 'any') {\r\n    for (const key in validators) {\r\n      /* eslint guard-for-in: 0 */\r\n      const validator = validators[key];\r\n      if (validator(str)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  throw new Error(`Invalid locale '${locale}'`);\r\n}\r\n\n\n//# sourceURL=webpack://validator/./src/lib/isLicensePlate.js?");

/***/ }),

/***/ "./src/lib/isLocale.js":
/*!*****************************!*\
  !*** ./src/lib/isLocale.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isLocale)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst localeReg = /^[A-Za-z]{2,4}([_-]([A-Za-z]{4}|[\\d]{3}))?([_-]([A-Za-z]{2}|[\\d]{3}))?$/;\n\nfunction isLocale(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (str === 'en_US_POSIX' || str === 'ca_ES_VALENCIA') {\n    return true;\n  }\n  return localeReg.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isLocale.js?");

/***/ }),

/***/ "./src/lib/isLowercase.js":
/*!********************************!*\
  !*** ./src/lib/isLowercase.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isLowercase)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction isLowercase(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return str === str.toLowerCase();\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isLowercase.js?");

/***/ }),

/***/ "./src/lib/isMACAddress.js":
/*!*********************************!*\
  !*** ./src/lib/isMACAddress.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMACAddress)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst macAddress48 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nconst macAddress48NoSeparators = /^([0-9a-fA-F]){12}$/;\nconst macAddress48WithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nconst macAddress64 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){6}([0-9a-fA-F]{2})$/;\nconst macAddress64NoSeparators = /^([0-9a-fA-F]){16}$/;\nconst macAddress64WithDots = /^([0-9a-fA-F]{4}\\.){3}([0-9a-fA-F]{4})$/;\n\nfunction isMACAddress(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (options?.eui) {\n    options.eui = String(options.eui);\n  }\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n  if (options?.no_colons || options?.no_separators) {\n    if (options.eui === '48') {\n      return macAddress48NoSeparators.test(str);\n    }\n    if (options.eui === '64') {\n      return macAddress64NoSeparators.test(str);\n    }\n    return macAddress48NoSeparators.test(str) || macAddress64NoSeparators.test(str);\n  }\n  if (options?.eui === '48') {\n    return macAddress48.test(str) || macAddress48WithDots.test(str);\n  }\n  if (options?.eui === '64') {\n    return macAddress64.test(str) || macAddress64WithDots.test(str);\n  }\n  return isMACAddress(str, { eui: '48' }) || isMACAddress(str, { eui: '64' });\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isMACAddress.js?");

/***/ }),

/***/ "./src/lib/isMD5.js":
/*!**************************!*\
  !*** ./src/lib/isMD5.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMD5)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst md5 = /^[a-f0-9]{32}$/;\n\nfunction isMD5(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return md5.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isMD5.js?");

/***/ }),

/***/ "./src/lib/isMagnetURI.js":
/*!********************************!*\
  !*** ./src/lib/isMagnetURI.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMagnetURI)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst magnetURI = /^magnet:\\?xt(?:\\.1)?=urn:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?($|&)/i;\n\nfunction isMagnetURI(url) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(url);\n  return magnetURI.test(url.trim());\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isMagnetURI.js?");

/***/ }),

/***/ "./src/lib/isMimeType.js":
/*!*******************************!*\
  !*** ./src/lib/isMimeType.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMimeType)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nconst mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i; // eslint-disable-line max-len\n\n// Handle \"charset\" in \"text/*\"\nconst mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n\n// Handle \"boundary\" in \"multipart/*\"\nconst mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isMimeType.js?");

/***/ }),

/***/ "./src/lib/isMobilePhone.js":
/*!**********************************!*\
  !*** ./src/lib/isMobilePhone.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMobilePhone),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable max-len */\nconst phones = {\n  'am-AM': /^(\\+?374|0)((10|[9|7][0-9])\\d{6}$|[2-4]\\d{7}$)/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)[569]\\d{7}$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)1)(5[0-25-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|91|9[3-9])\\d{7}$/,\n  'el-GR': /^(\\+?30|0)?(69\\d{8})$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}))/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4(0|1|2|4|5|6)?|50)\\s?(\\d\\s?){4,8}\\d$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(5|79)\\d{7}$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'my-MM': /^(\\+?959|09|9)(2[5-7]|3[1-2]|4[0-5]|6[6-9]|7[5-9]|9[6-9])[0-9]{7}$/,\n  'ms-MY': /^(\\+?6?01){1}(([0145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[2-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-RO': /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN': /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/,\n};\n/* eslint-enable max-len */\n\n// aliases\nphones['en-CA'] = phones['en-US'];\nphones['fr-CA'] = phones['en-CA'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\nphones['zh-MO'] = phones['en-MO'];\nphones['ga-IE'] = phones['en-IE'];\nphones['fr-CH'] = phones['de-CH'];\nphones['it-CH'] = phones['fr-CH'];\n\nfunction isMobilePhone(str, locale, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (options && options.strictMode && !str.startsWith('+')) {\n    return false;\n  }\n  if (Array.isArray(locale)) {\n    return locale.some((key) => {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        const phone = phones[key];\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  } else if (locale in phones) {\n    return phones[locale].test(str);\n    // alias falsey locale as 'any'\n  } else if (!locale || locale === 'any') {\n    for (const key in phones) {\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        const phone = phones[key];\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n}\n\nconst locales = Object.keys(phones);\n\n\n//# sourceURL=webpack://validator/./src/lib/isMobilePhone.js?");

/***/ }),

/***/ "./src/lib/isMongoId.js":
/*!******************************!*\
  !*** ./src/lib/isMongoId.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMongoId)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isHexadecimal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isHexadecimal */ \"./src/lib/isHexadecimal.js\");\n\n\n\n\nfunction isMongoId(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return (0,_isHexadecimal__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str) && str.length === 24;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isMongoId.js?");

/***/ }),

/***/ "./src/lib/isMultibyte.js":
/*!********************************!*\
  !*** ./src/lib/isMultibyte.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isMultibyte)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* eslint-disable no-control-regex */\nconst multibyte = /[^\\x00-\\x7F]/;\n/* eslint-enable no-control-regex */\n\nfunction isMultibyte(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return multibyte.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isMultibyte.js?");

/***/ }),

/***/ "./src/lib/isNumeric.js":
/*!******************************!*\
  !*** ./src/lib/isNumeric.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isNumeric)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _alpha__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alpha */ \"./src/lib/alpha.js\");\n\n\n\nconst numericNoSymbols = /^[0-9]+$/;\n\nfunction isNumeric(str, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n  return (new RegExp(`^[+-]?([0-9]*[${(options || {}).locale ? _alpha__WEBPACK_IMPORTED_MODULE_1__.decimal[options.locale] : '.'}])?[0-9]+$`)).test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isNumeric.js?");

/***/ }),

/***/ "./src/lib/isOctal.js":
/*!****************************!*\
  !*** ./src/lib/isOctal.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isOctal)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst octal = /^(0o)?[0-7]+$/i;\n\nfunction isOctal(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return octal.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isOctal.js?");

/***/ }),

/***/ "./src/lib/isPassportNumber.js":
/*!*************************************!*\
  !*** ./src/lib/isPassportNumber.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isPassportNumber)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/**\n * Reference:\n * https://en.wikipedia.org/ -- Wikipedia\n * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\n * https://countrycode.org/ -- Country Codes\n */\nconst passportRegexByCountryCode = {\n  AM: /^[A-Z]{2}\\d{7}$/, // ARMENIA\n  AR: /^[A-Z]{3}\\d{6}$/, // ARGENTINA\n  AT: /^[A-Z]\\d{7}$/, // AUSTRIA\n  AU: /^[A-Z]\\d{7}$/, // AUSTRALIA\n  BE: /^[A-Z]{2}\\d{6}$/, // BELGIUM\n  BG: /^\\d{9}$/, // BULGARIA\n  BR: /^[A-Z]{2}\\d{6}$/, // BRAZIL\n  BY: /^[A-Z]{2}\\d{7}$/, // BELARUS\n  CA: /^[A-Z]{2}\\d{6}$/, // CANADA\n  CH: /^[A-Z]\\d{7}$/, // SWITZERLAND\n  CN: /^G\\d{8}$|^E(?![IO])[A-Z0-9]\\d{7}$/, // CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits\n  CY: /^[A-Z](\\d{6}|\\d{8})$/, // CYPRUS\n  CZ: /^\\d{8}$/, // CZECH REPUBLIC\n  DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/, // GERMANY\n  DK: /^\\d{9}$/, // DENMARK\n  DZ: /^\\d{9}$/, // ALGERIA\n  EE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/, // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\n  ES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/, // SPAIN\n  FI: /^[A-Z]{2}\\d{7}$/, // FINLAND\n  FR: /^\\d{2}[A-Z]{2}\\d{5}$/, // FRANCE\n  GB: /^\\d{9}$/, // UNITED KINGDOM\n  GR: /^[A-Z]{2}\\d{7}$/, // GREECE\n  HR: /^\\d{9}$/, // CROATIA\n  HU: /^[A-Z]{2}(\\d{6}|\\d{7})$/, // HUNGARY\n  IE: /^[A-Z0-9]{2}\\d{7}$/, // IRELAND\n  IN: /^[A-Z]{1}-?\\d{7}$/, // INDIA\n  ID: /^[A-C]\\d{7}$/, // INDONESIA\n  IR: /^[A-Z]\\d{8}$/, // IRAN\n  IS: /^(A)\\d{7}$/, // ICELAND\n  IT: /^[A-Z0-9]{2}\\d{7}$/, // ITALY\n  JP: /^[A-Z]{2}\\d{7}$/, // JAPAN\n  KR: /^[MS]\\d{8}$/, // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\n  LT: /^[A-Z0-9]{8}$/, // LITHUANIA\n  LU: /^[A-Z0-9]{8}$/, // LUXEMBURG\n  LV: /^[A-Z0-9]{2}\\d{7}$/, // LATVIA\n  LY: /^[A-Z0-9]{8}$/, // LIBYA\n  MT: /^\\d{7}$/, // MALTA\n  MZ: /^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$/, // MOZAMBIQUE\n  MY: /^[AHK]\\d{8}$/, // MALAYSIA\n  NL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/, // NETHERLANDS\n  PL: /^[A-Z]{2}\\d{7}$/, // POLAND\n  PT: /^[A-Z]\\d{6}$/, // PORTUGAL\n  RO: /^\\d{8,9}$/, // ROMANIA\n  RU: /^\\d{9}$/, // RUSSIAN FEDERATION\n  SE: /^\\d{8}$/, // SWEDEN\n  SL: /^(P)[A-Z]\\d{7}$/, // SLOVANIA\n  SK: /^[0-9A-Z]\\d{7}$/, // SLOVAKIA\n  TR: /^[A-Z]\\d{8}$/, // TURKEY\n  UA: /^[A-Z]{2}\\d{6}$/, // UKRAINE\n  US: /^\\d{9}$/, // UNITED STATES\n};\n\n/**\n * Check if str is a valid passport number\n * relative to provided ISO Country Code.\n *\n * @param {string} str\n * @param {string} countryCode\n * @return {boolean}\n */\nfunction isPassportNumber(str, countryCode) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  /** Remove All Whitespaces, Convert to UPPERCASE */\n  const normalizedStr = str.replace(/\\s/g, '').toUpperCase();\n\n  return (countryCode.toUpperCase() in passportRegexByCountryCode) &&\n    passportRegexByCountryCode[countryCode].test(normalizedStr);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isPassportNumber.js?");

/***/ }),

/***/ "./src/lib/isPort.js":
/*!***************************!*\
  !*** ./src/lib/isPort.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isPort)\n/* harmony export */ });\n/* harmony import */ var _isInt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isInt */ \"./src/lib/isInt.js\");\n\n\nfunction isPort(str) {\n  return (0,_isInt__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str, { min: 0, max: 65535 });\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isPort.js?");

/***/ }),

/***/ "./src/lib/isPostalCode.js":
/*!*********************************!*\
  !*** ./src/lib/isPostalCode.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isPostalCode),\n/* harmony export */   \"locales\": () => (/* binding */ locales)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n// common patterns\nconst threeDigit = /^\\d{3}$/;\nconst fourDigit = /^\\d{4}$/;\nconst fiveDigit = /^\\d{5}$/;\nconst sixDigit = /^\\d{6}$/;\n\nconst patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  BY: /2[1-4]{1}\\d{4}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DO: fiveDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HT: /^HT\\d{4}$/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-Za-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IR: /\\b(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}\\b/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  KR: /^(\\d{5}|\\d{6})$/,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  LK: fiveDigit,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  MY: fiveDigit,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SG: sixDigit,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TH: fiveDigit,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit,\n};\n\nconst locales = Object.keys(patterns);\n\nfunction isPostalCode(str, locale) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (const key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        const pattern = patterns[key];\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isPostalCode.js?");

/***/ }),

/***/ "./src/lib/isRFC3339.js":
/*!******************************!*\
  !*** ./src/lib/isRFC3339.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isRFC3339)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\n\nconst dateFullYear = /[0-9]{4}/;\nconst dateMonth = /(0[1-9]|1[0-2])/;\nconst dateMDay = /([12]\\d|0[1-9]|3[01])/;\n\nconst timeHour = /([01][0-9]|2[0-3])/;\nconst timeMinute = /[0-5][0-9]/;\nconst timeSecond = /([0-5][0-9]|60)/;\n\nconst timeSecFrac = /(\\.[0-9]+)?/;\nconst timeNumOffset = new RegExp(`[-+]${timeHour.source}:${timeMinute.source}`);\nconst timeOffset = new RegExp(`([zZ]|${timeNumOffset.source})`);\n\nconst partialTime = new RegExp(`${timeHour.source}:${timeMinute.source}:${timeSecond.source}${timeSecFrac.source}`);\n\nconst fullDate = new RegExp(`${dateFullYear.source}-${dateMonth.source}-${dateMDay.source}`);\nconst fullTime = new RegExp(`${partialTime.source}${timeOffset.source}`);\n\nconst rfc3339 = new RegExp(`^${fullDate.source}[ tT]${fullTime.source}$`);\n\nfunction isRFC3339(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return rfc3339.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isRFC3339.js?");

/***/ }),

/***/ "./src/lib/isRgbColor.js":
/*!*******************************!*\
  !*** ./src/lib/isRgbColor.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isRgbColor)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\nconst rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\nconst rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)/;\nconst rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)/;\n\nfunction isRgbColor(str, includePercentValues = true) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n\n  if (!includePercentValues) {\n    return rgbColor.test(str) || rgbaColor.test(str);\n  }\n\n  return rgbColor.test(str) ||\n    rgbaColor.test(str) ||\n    rgbColorPercent.test(str) ||\n    rgbaColorPercent.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isRgbColor.js?");

/***/ }),

/***/ "./src/lib/isSemVer.js":
/*!*****************************!*\
  !*** ./src/lib/isSemVer.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSemVer)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_multilineRegex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/multilineRegex */ \"./src/lib/util/multilineRegex.js\");\n\n\n\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\nconst semanticVersioningRegex = (0,_util_multilineRegex__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n  '^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)',\n  '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))',\n  '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$',\n], 'i');\n\nfunction isSemVer(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str);\n\n  return semanticVersioningRegex.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isSemVer.js?");

/***/ }),

/***/ "./src/lib/isSlug.js":
/*!***************************!*\
  !*** ./src/lib/isSlug.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSlug)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nlet charsetRegex = /^[^\\s-_](?!.*?[-_]{2,})[a-z0-9-\\\\][^\\s]*[^-_\\s]$/;\n\nfunction isSlug(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return (charsetRegex.test(str));\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isSlug.js?");

/***/ }),

/***/ "./src/lib/isStrongPassword.js":
/*!*************************************!*\
  !*** ./src/lib/isStrongPassword.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isStrongPassword)\n/* harmony export */ });\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\n\nconst upperCaseRegex = /^[A-Z]$/;\nconst lowerCaseRegex = /^[a-z]$/;\nconst numberRegex = /^[0-9]$/;\nconst symbolRegex = /^[-#!$@%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\n\nconst defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10,\n};\n\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\nfunction countChars(str) {\n  let result = {};\n  Array.from(str).forEach((char) => {\n    let curVal = result[char];\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n\n/* Return information about a password */\nfunction analyzePassword(password) {\n  let charMap = countChars(password);\n  let analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0,\n  };\n  Object.keys(charMap).forEach((char) => {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\n\nfunction scorePassword(analysis, scoringOptions) {\n  let points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n  return points;\n}\n\nfunction isStrongPassword(str, options = null) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const analysis = analyzePassword(str);\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options || {}, defaultOptions);\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n  return analysis.length >= options.minLength\n        && analysis.lowercaseCount >= options.minLowercase\n        && analysis.uppercaseCount >= options.minUppercase\n        && analysis.numberCount >= options.minNumbers\n        && analysis.symbolCount >= options.minSymbols;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isStrongPassword.js?");

/***/ }),

/***/ "./src/lib/isSurrogatePair.js":
/*!************************************!*\
  !*** ./src/lib/isSurrogatePair.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSurrogatePair)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\nfunction isSurrogatePair(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return surrogatePair.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isSurrogatePair.js?");

/***/ }),

/***/ "./src/lib/isTaxID.js":
/*!****************************!*\
  !*** ./src/lib/isTaxID.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isTaxID)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _util_algorithms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/algorithms */ \"./src/lib/util/algorithms.js\");\n/* harmony import */ var _isDate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isDate */ \"./src/lib/isDate.js\");\n\n\n\n\n/**\n * TIN Validation\n * Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.\n *\n * EU-UK:\n * National TIN validity is calculated using public algorithms as made available by DG TAXUD.\n *\n * See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.\n *\n * US:\n * An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,\n *  is used to identify a business entity.\n *\n * NOTES:\n *  - Prefix 47 is being reserved for future use\n *  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.\n *\n * See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`\n * for more information.\n */\n\n// Locale functions\n\n/*\n * bg-BG validation function\n * (Edinen graždanski nomer (EGN/ЕГН), persons only)\n * Checks if birth date (first six digits) is valid and calculates check (last) digit\n */\nfunction bgBgCheck(tin) {\n  // Extract full year, normalize month and check birth date validity\n  let century_year = tin.slice(0, 2);\n  let month = parseInt(tin.slice(2, 4), 10);\n  if (month > 40) {\n    month -= 40;\n    century_year = `20${century_year}`;\n  } else if (month > 20) {\n    month -= 20;\n    century_year = `18${century_year}`;\n  } else {\n    century_year = `19${century_year}`;\n  }\n  if (month < 10) { month = `0${month}`; }\n  const date = `${century_year}/${month}/${tin.slice(4, 6)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // split digits into an array for further processing\n  const digits = tin.split('').map(a => parseInt(a, 10));\n\n  // Calculate checksum by multiplying digits with fixed values\n  const multip_lookup = [2, 4, 8, 5, 10, 9, 7, 3, 6];\n  let checksum = 0;\n  for (let i = 0; i < multip_lookup.length; i++) {\n    checksum += digits[i] * multip_lookup[i];\n  }\n  checksum = checksum % 11 === 10 ? 0 : checksum % 11;\n  return checksum === digits[9];\n}\n\n/**\n * Check if an input is a valid Canadian SIN (Social Insurance Number)\n *\n * The Social Insurance Number (SIN) is a 9 digit number that\n * you need to work in Canada or to have access to government programs and benefits.\n *\n * https://en.wikipedia.org/wiki/Social_Insurance_Number\n * https://www.canada.ca/en/employment-social-development/services/sin.html\n * https://www.codercrunch.com/challenge/819302488/sin-validator\n *\n * @param {string} input\n * @return {boolean}\n */\nfunction isCanadianSIN(input) {\n  const digitsArray = input.split('');\n  const even = digitsArray\n    .filter((_, idx) => idx % 2)\n    .map(i => Number(i) * 2)\n    .join('')\n    .split('');\n\n  const total = digitsArray\n    .filter((_, idx) => !(idx % 2))\n    .concat(even)\n    .map(i => Number(i))\n    .reduce((acc, cur) => acc + cur);\n\n  return (total % 10 === 0);\n}\n\n/*\n * cs-CZ validation function\n * (Rodné číslo (RČ), persons only)\n * Checks if birth date (first six digits) is valid and divisibility by 11\n * Material not in DG TAXUD document sourced from:\n * -`https://lorenc.info/3MA381/overeni-spravnosti-rodneho-cisla.htm`\n * -`https://www.mvcr.cz/clanek/rady-a-sluzby-dokumenty-rodne-cislo.aspx`\n */\nfunction csCzCheck(tin) {\n  tin = tin.replace(/\\W/, '');\n\n  // Extract full year from TIN length\n  let full_year = parseInt(tin.slice(0, 2), 10);\n  if (tin.length === 10) {\n    if (full_year < 54) {\n      full_year = `20${full_year}`;\n    } else {\n      full_year = `19${full_year}`;\n    }\n  } else {\n    if (tin.slice(6) === '000') { return false; } // Three-zero serial not assigned before 1954\n    if (full_year < 54) {\n      full_year = `19${full_year}`;\n    } else {\n      return false; // No 18XX years seen in any of the resources\n    }\n  }\n  // Add missing zero if needed\n  if (full_year.length === 3) {\n    full_year = [full_year.slice(0, 2), '0', full_year.slice(2)].join('');\n  }\n\n  // Extract month from TIN and normalize\n  let month = parseInt(tin.slice(2, 4), 10);\n  if (month > 50) {\n    month -= 50;\n  }\n  if (month > 20) {\n    // Month-plus-twenty was only introduced in 2004\n    if (parseInt(full_year, 10) < 2004) { return false; }\n    month -= 20;\n  }\n  if (month < 10) { month = `0${month}`; }\n\n  // Check date validity\n  const date = `${full_year}/${month}/${tin.slice(4, 6)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // Verify divisibility by 11\n  if (tin.length === 10) {\n    if (parseInt(tin, 10) % 11 !== 0) {\n      // Some numbers up to and including 1985 are still valid if\n      // check (last) digit equals 0 and modulo of first 9 digits equals 10\n      const checkdigit = parseInt(tin.slice(0, 9), 10) % 11;\n      if (parseInt(full_year, 10) < 1986 && checkdigit === 10) {\n        if (parseInt(tin.slice(9), 10) !== 0) { return false; }\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/*\n * de-AT validation function\n * (Abgabenkontonummer, persons/entities)\n * Verify TIN validity by calling luhnCheck()\n */\nfunction deAtCheck(tin) {\n  return _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.luhnCheck(tin);\n}\n\n/*\n * de-DE validation function\n * (Steueridentifikationsnummer (Steuer-IdNr.), persons only)\n * Tests for single duplicate/triplicate value, then calculates ISO 7064 check (last) digit\n * Partial implementation of spec (same result with both algorithms always)\n */\nfunction deDeCheck(tin) {\n  // Split digits into an array for further processing\n  const digits = tin.split('').map(a => parseInt(a, 10));\n\n  // Fill array with strings of number positions\n  let occurences = [];\n  for (let i = 0; i < digits.length - 1; i++) {\n    occurences.push('');\n    for (let j = 0; j < digits.length - 1; j++) {\n      if (digits[i] === digits[j]) {\n        occurences[i] += j;\n      }\n    }\n  }\n\n  // Remove digits with one occurence and test for only one duplicate/triplicate\n  occurences = occurences.filter(a => a.length > 1);\n  if (occurences.length !== 2 && occurences.length !== 3) { return false; }\n\n  // In case of triplicate value only two digits are allowed next to each other\n  if (occurences[0].length === 3) {\n    const trip_locations = occurences[0].split('').map(a => parseInt(a, 10));\n    let recurrent = 0; // Amount of neighbour occurences\n    for (let i = 0; i < trip_locations.length - 1; i++) {\n      if (trip_locations[i] + 1 === trip_locations[i + 1]) {\n        recurrent += 1;\n      }\n    }\n    if (recurrent === 2) {\n      return false;\n    }\n  }\n  return _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.iso7064Check(tin);\n}\n\n/*\n * dk-DK validation function\n * (CPR-nummer (personnummer), persons only)\n * Checks if birth date (first six digits) is valid and assigned to century (seventh) digit,\n * and calculates check (last) digit\n */\nfunction dkDkCheck(tin) {\n  tin = tin.replace(/\\W/, '');\n\n  // Extract year, check if valid for given century digit and add century\n  let year = parseInt(tin.slice(4, 6), 10);\n  const century_digit = tin.slice(6, 7);\n  switch (century_digit) {\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n      year = `19${year}`;\n      break;\n    case '4':\n    case '9':\n      if (year < 37) {\n        year = `20${year}`;\n      } else {\n        year = `19${year}`;\n      }\n      break;\n    default:\n      if (year < 37) {\n        year = `20${year}`;\n      } else if (year > 58) {\n        year = `18${year}`;\n      } else {\n        return false;\n      }\n      break;\n  }\n  // Add missing zero if needed\n  if (year.length === 3) {\n    year = [year.slice(0, 2), '0', year.slice(2)].join('');\n  }\n  // Check date validity\n  const date = `${year}/${tin.slice(2, 4)}/${tin.slice(0, 2)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // Split digits into an array for further processing\n  const digits = tin.split('').map(a => parseInt(a, 10));\n  let checksum = 0;\n  let weight = 4;\n  // Multiply by weight and add to checksum\n  for (let i = 0; i < 9; i++) {\n    checksum += digits[i] * weight;\n    weight -= 1;\n    if (weight === 1) {\n      weight = 7;\n    }\n  }\n  checksum %= 11;\n  if (checksum === 1) { return false; }\n  return checksum === 0 ? digits[9] === 0 : digits[9] === 11 - checksum;\n}\n\n/*\n * el-CY validation function\n * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons only)\n * Verify TIN validity by calculating ASCII value of check (last) character\n */\nfunction elCyCheck(tin) {\n  // split digits into an array for further processing\n  const digits = tin.slice(0, 8).split('').map(a => parseInt(a, 10));\n\n  let checksum = 0;\n  // add digits in even places\n  for (let i = 1; i < digits.length; i += 2) {\n    checksum += digits[i];\n  }\n\n  // add digits in odd places\n  for (let i = 0; i < digits.length; i += 2) {\n    if (digits[i] < 2) {\n      checksum += 1 - digits[i];\n    } else {\n      checksum += (2 * (digits[i] - 2)) + 5;\n      if (digits[i] > 4) {\n        checksum += 2;\n      }\n    }\n  }\n  return String.fromCharCode((checksum % 26) + 65) === tin.charAt(8);\n}\n\n/*\n * el-GR validation function\n * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons/entities)\n * Verify TIN validity by calculating check (last) digit\n * Algorithm not in DG TAXUD document- sourced from:\n * - `http://epixeirisi.gr/%CE%9A%CE%A1%CE%99%CE%A3%CE%99%CE%9C%CE%91-%CE%98%CE%95%CE%9C%CE%91%CE%A4%CE%91-%CE%A6%CE%9F%CE%A1%CE%9F%CE%9B%CE%9F%CE%93%CE%99%CE%91%CE%A3-%CE%9A%CE%91%CE%99-%CE%9B%CE%9F%CE%93%CE%99%CE%A3%CE%A4%CE%99%CE%9A%CE%97%CE%A3/23791/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82-%CE%A6%CE%BF%CF%81%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CE%BA%CE%BF%CF%8D-%CE%9C%CE%B7%CF%84%CF%81%CF%8E%CE%BF%CF%85`\n */\nfunction elGrCheck(tin) {\n  // split digits into an array for further processing\n  const digits = tin.split('').map(a => parseInt(a, 10));\n\n  let checksum = 0;\n  for (let i = 0; i < 8; i++) {\n    checksum += digits[i] * (2 ** (8 - i));\n  }\n  return ((checksum % 11) % 10) === digits[8];\n}\n\n/*\n * en-GB validation function (should go here if needed)\n * (National Insurance Number (NINO) or Unique Taxpayer Reference (UTR),\n * persons/entities respectively)\n */\n\n/*\n * en-IE validation function\n * (Personal Public Service Number (PPS No), persons only)\n * Verify TIN validity by calculating check (second to last) character\n */\nfunction enIeCheck(tin) {\n  let checksum = _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(a => parseInt(a, 10)), 8);\n  if (tin.length === 9 && tin[8] !== 'W') {\n    checksum += (tin[8].charCodeAt(0) - 64) * 9;\n  }\n\n  checksum %= 23;\n  if (checksum === 0) {\n    return tin[7].toUpperCase() === 'W';\n  }\n  return tin[7].toUpperCase() === String.fromCharCode(64 + checksum);\n}\n\n// Valid US IRS campus prefixes\nconst enUsCampusPrefix = {\n  andover: ['10', '12'],\n  atlanta: ['60', '67'],\n  austin: ['50', '53'],\n  brookhaven: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],\n  cincinnati: ['30', '32', '35', '36', '37', '38', '61'],\n  fresno: ['15', '24'],\n  internet: ['20', '26', '27', '45', '46', '47'],\n  kansas: ['40', '44'],\n  memphis: ['94', '95'],\n  ogden: ['80', '90'],\n  philadelphia: ['33', '39', '41', '42', '43', '46', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],\n  sba: ['31'],\n};\n\n// Return an array of all US IRS campus prefixes\nfunction enUsGetPrefixes() {\n  const prefixes = [];\n\n  for (const location in enUsCampusPrefix) {\n    // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n    // istanbul ignore else\n    if (enUsCampusPrefix.hasOwnProperty(location)) {\n      prefixes.push(...enUsCampusPrefix[location]);\n    }\n  }\n\n  return prefixes;\n}\n\n/*\n * en-US validation function\n * Verify that the TIN starts with a valid IRS campus prefix\n */\nfunction enUsCheck(tin) {\n  return enUsGetPrefixes().indexOf(tin.substr(0, 2)) !== -1;\n}\n\n/*\n * es-ES validation function\n * (Documento Nacional de Identidad (DNI)\n * or Número de Identificación de Extranjero (NIE), persons only)\n * Verify TIN validity by calculating check (last) character\n */\nfunction esEsCheck(tin) {\n  // Split characters into an array for further processing\n  let chars = tin.toUpperCase().split('');\n\n  // Replace initial letter if needed\n  if (isNaN(parseInt(chars[0], 10)) && chars.length > 1) {\n    let lead_replace = 0;\n    switch (chars[0]) {\n      case 'Y':\n        lead_replace = 1;\n        break;\n      case 'Z':\n        lead_replace = 2;\n        break;\n      default:\n    }\n    chars.splice(0, 1, lead_replace);\n  // Fill with zeros if smaller than proper\n  } else {\n    while (chars.length < 9) {\n      chars.unshift(0);\n    }\n  }\n\n  // Calculate checksum and check according to lookup\n  const lookup = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E'];\n  chars = chars.join('');\n  let checksum = (parseInt(chars.slice(0, 8), 10) % 23);\n  return chars[8] === lookup[checksum];\n}\n\n/*\n * et-EE validation function\n * (Isikukood (IK), persons only)\n * Checks if birth date (century digit and six following) is valid and calculates check (last) digit\n * Material not in DG TAXUD document sourced from:\n * - `https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/Estonia-TIN.pdf`\n */\nfunction etEeCheck(tin) {\n  // Extract year and add century\n  let full_year = tin.slice(1, 3);\n  const century_digit = tin.slice(0, 1);\n  switch (century_digit) {\n    case '1':\n    case '2':\n      full_year = `18${full_year}`;\n      break;\n    case '3':\n    case '4':\n      full_year = `19${full_year}`;\n      break;\n    default:\n      full_year = `20${full_year}`;\n      break;\n  }\n  // Check date validity\n  const date = `${full_year}/${tin.slice(3, 5)}/${tin.slice(5, 7)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // Split digits into an array for further processing\n  const digits = tin.split('').map(a => parseInt(a, 10));\n  let checksum = 0;\n  let weight = 1;\n  // Multiply by weight and add to checksum\n  for (let i = 0; i < 10; i++) {\n    checksum += digits[i] * weight;\n    weight += 1;\n    if (weight === 10) {\n      weight = 1;\n    }\n  }\n  // Do again if modulo 11 of checksum is 10\n  if (checksum % 11 === 10) {\n    checksum = 0;\n    weight = 3;\n    for (let i = 0; i < 10; i++) {\n      checksum += digits[i] * weight;\n      weight += 1;\n      if (weight === 10) {\n        weight = 1;\n      }\n    }\n    if (checksum % 11 === 10) { return digits[10] === 0; }\n  }\n\n  return checksum % 11 === digits[10];\n}\n\n/*\n * fi-FI validation function\n * (Henkilötunnus (HETU), persons only)\n * Checks if birth date (first six digits plus century symbol) is valid\n * and calculates check (last) digit\n */\nfunction fiFiCheck(tin) {\n  // Extract year and add century\n  let full_year = tin.slice(4, 6);\n  const century_symbol = tin.slice(6, 7);\n  switch (century_symbol) {\n    case '+':\n      full_year = `18${full_year}`;\n      break;\n    case '-':\n      full_year = `19${full_year}`;\n      break;\n    default:\n      full_year = `20${full_year}`;\n      break;\n  }\n  // Check date validity\n  const date = `${full_year}/${tin.slice(2, 4)}/${tin.slice(0, 2)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // Calculate check character\n  let checksum = parseInt((tin.slice(0, 6) + tin.slice(7, 10)), 10) % 31;\n  if (checksum < 10) { return checksum === parseInt(tin.slice(10), 10); }\n\n  checksum -= 10;\n  const letters_lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y'];\n  return letters_lookup[checksum] === tin.slice(10);\n}\n\n/*\n * fr/nl-BE validation function\n * (Numéro national (N.N.), persons only)\n * Checks if birth date (first six digits) is valid and calculates check (last two) digits\n */\nfunction frBeCheck(tin) {\n  // Zero month/day value is acceptable\n  if (tin.slice(2, 4) !== '00' || tin.slice(4, 6) !== '00') {\n    // Extract date from first six digits of TIN\n    const date = `${tin.slice(0, 2)}/${tin.slice(2, 4)}/${tin.slice(4, 6)}`;\n    if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YY/MM/DD')) { return false; }\n  }\n\n  let checksum = 97 - (parseInt(tin.slice(0, 9), 10) % 97);\n  const checkdigits = parseInt(tin.slice(9, 11), 10);\n  if (checksum !== checkdigits) {\n    checksum = 97 - (parseInt(`2${tin.slice(0, 9)}`, 10) % 97);\n    if (checksum !== checkdigits) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*\n * fr-FR validation function\n * (Numéro fiscal de référence (numéro SPI), persons only)\n * Verify TIN validity by calculating check (last three) digits\n */\nfunction frFrCheck(tin) {\n  tin = tin.replace(/\\s/g, '');\n  const checksum = parseInt(tin.slice(0, 10), 10) % 511;\n  const checkdigits = parseInt(tin.slice(10, 13), 10);\n  return checksum === checkdigits;\n}\n\n/*\n * fr/lb-LU validation function\n * (numéro d’identification personnelle, persons only)\n * Verify birth date validity and run Luhn and Verhoeff checks\n */\nfunction frLuCheck(tin) {\n  // Extract date and check validity\n  const date = `${tin.slice(0, 4)}/${tin.slice(4, 6)}/${tin.slice(6, 8)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // Run Luhn check\n  if (!_util_algorithms__WEBPACK_IMPORTED_MODULE_1__.luhnCheck(tin.slice(0, 12))) { return false; }\n  // Remove Luhn check digit and run Verhoeff check\n  return _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.verhoeffCheck(`${tin.slice(0, 11)}${tin[12]}`);\n}\n\n/*\n * hr-HR validation function\n * (Osobni identifikacijski broj (OIB), persons/entities)\n * Verify TIN validity by calling iso7064Check(digits)\n */\nfunction hrHrCheck(tin) {\n  return _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.iso7064Check(tin);\n}\n\n/*\n * hu-HU validation function\n * (Adóazonosító jel, persons only)\n * Verify TIN validity by calculating check (last) digit\n */\nfunction huHuCheck(tin) {\n  // split digits into an array for further processing\n  const digits = tin.split('').map(a => parseInt(a, 10));\n\n  let checksum = 8;\n  for (let i = 1; i < 9; i++) {\n    checksum += digits[i] * (i + 1);\n  }\n  return checksum % 11 === digits[9];\n}\n\n/*\n * lt-LT validation function (should go here if needed)\n * (Asmens kodas, persons/entities respectively)\n * Current validation check is alias of etEeCheck- same format applies\n */\n\n/*\n * it-IT first/last name validity check\n * Accepts it-IT TIN-encoded names as a three-element character array and checks their validity\n * Due to lack of clarity between resources (\"Are only Italian consonants used?\n * What happens if a person has X in their name?\" etc.) only two test conditions\n * have been implemented:\n * Vowels may only be followed by other vowels or an X character\n * and X characters after vowels may only be followed by other X characters.\n */\nfunction itItNameCheck(name) {\n  // true at the first occurence of a vowel\n  let vowelflag = false;\n\n  // true at the first occurence of an X AFTER vowel\n  // (to properly handle last names with X as consonant)\n  let xflag = false;\n\n  for (let i = 0; i < 3; i++) {\n    if (!vowelflag && /[AEIOU]/.test(name[i])) {\n      vowelflag = true;\n    } else if (!xflag && vowelflag && (name[i] === 'X')) {\n      xflag = true;\n    } else if (i > 0) {\n      if (vowelflag && !xflag) {\n        if (!/[AEIOU]/.test(name[i])) { return false; }\n      }\n      if (xflag) {\n        if (!/X/.test(name[i])) { return false; }\n      }\n    }\n  }\n  return true;\n}\n\n/*\n * it-IT validation function\n * (Codice fiscale (TIN-IT), persons only)\n * Verify name, birth date and codice catastale validity\n * and calculate check character.\n * Material not in DG-TAXUD document sourced from:\n * `https://en.wikipedia.org/wiki/Italian_fiscal_code`\n */\nfunction itItCheck(tin) {\n  // Capitalize and split characters into an array for further processing\n  const chars = tin.toUpperCase().split('');\n\n  // Check first and last name validity calling itItNameCheck()\n  if (!itItNameCheck(chars.slice(0, 3))) { return false; }\n  if (!itItNameCheck(chars.slice(3, 6))) { return false; }\n\n  // Convert letters in number spaces back to numbers if any\n  const number_locations = [6, 7, 9, 10, 12, 13, 14];\n  const number_replace = {\n    L: '0',\n    M: '1',\n    N: '2',\n    P: '3',\n    Q: '4',\n    R: '5',\n    S: '6',\n    T: '7',\n    U: '8',\n    V: '9',\n  };\n  for (const i of number_locations) {\n    if (chars[i] in number_replace) {\n      chars.splice(i, 1, number_replace[chars[i]]);\n    }\n  }\n\n  // Extract month and day, and check date validity\n  const month_replace = {\n    A: '01',\n    B: '02',\n    C: '03',\n    D: '04',\n    E: '05',\n    H: '06',\n    L: '07',\n    M: '08',\n    P: '09',\n    R: '10',\n    S: '11',\n    T: '12',\n  };\n  let month = month_replace[chars[8]];\n\n  let day = parseInt(chars[9] + chars[10], 10);\n  if (day > 40) { day -= 40; }\n  if (day < 10) { day = `0${day}`; }\n\n  const date = `${chars[6]}${chars[7]}/${month}/${day}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YY/MM/DD')) { return false; }\n\n  // Calculate check character by adding up even and odd characters as numbers\n  let checksum = 0;\n  for (let i = 1; i < chars.length - 1; i += 2) {\n    let char_to_int = parseInt(chars[i], 10);\n    if (isNaN(char_to_int)) {\n      char_to_int = chars[i].charCodeAt(0) - 65;\n    }\n    checksum += char_to_int;\n  }\n\n  const odd_convert = { // Maps of characters at odd places\n    A: 1,\n    B: 0,\n    C: 5,\n    D: 7,\n    E: 9,\n    F: 13,\n    G: 15,\n    H: 17,\n    I: 19,\n    J: 21,\n    K: 2,\n    L: 4,\n    M: 18,\n    N: 20,\n    O: 11,\n    P: 3,\n    Q: 6,\n    R: 8,\n    S: 12,\n    T: 14,\n    U: 16,\n    V: 10,\n    W: 22,\n    X: 25,\n    Y: 24,\n    Z: 23,\n    0: 1,\n    1: 0,\n  };\n  for (let i = 0; i < chars.length - 1; i += 2) {\n    let char_to_int = 0;\n    if (chars[i] in odd_convert) {\n      char_to_int = odd_convert[chars[i]];\n    } else {\n      let multiplier = parseInt(chars[i], 10);\n      char_to_int = (2 * multiplier) + 1;\n      if (multiplier > 4) {\n        char_to_int += 2;\n      }\n    }\n    checksum += char_to_int;\n  }\n\n  if (String.fromCharCode(65 + (checksum % 26)) !== chars[15]) { return false; }\n  return true;\n}\n\n/*\n * lv-LV validation function\n * (Personas kods (PK), persons only)\n * Check validity of birth date and calculate check (last) digit\n * Support only for old format numbers (not starting with '32', issued before 2017/07/01)\n * Material not in DG TAXUD document sourced from:\n * `https://boot.ritakafija.lv/forums/index.php?/topic/88314-personas-koda-algoritms-%C4%8Deksumma/`\n */\nfunction lvLvCheck(tin) {\n  tin = tin.replace(/\\W/, '');\n  // Extract date from TIN\n  const day = tin.slice(0, 2);\n  if (day !== '32') { // No date/checksum check if new format\n    const month = tin.slice(2, 4);\n    if (month !== '00') { // No date check if unknown month\n      let full_year = tin.slice(4, 6);\n      switch (tin[6]) {\n        case '0':\n          full_year = `18${full_year}`;\n          break;\n        case '1':\n          full_year = `19${full_year}`;\n          break;\n        default:\n          full_year = `20${full_year}`;\n          break;\n      }\n      // Check date validity\n      const date = `${full_year}/${tin.slice(2, 4)}/${day}`;\n      if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n    }\n\n    // Calculate check digit\n    let checksum = 1101;\n    const multip_lookup = [1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n    for (let i = 0; i < tin.length - 1; i++) {\n      checksum -= parseInt(tin[i], 10) * multip_lookup[i];\n    }\n    return (parseInt(tin[10], 10) === checksum % 11);\n  }\n  return true;\n}\n\n/*\n * mt-MT validation function\n * (Identity Card Number or Unique Taxpayer Reference, persons/entities)\n * Verify Identity Card Number structure (no other tests found)\n */\nfunction mtMtCheck(tin) {\n  if (tin.length !== 9) { // No tests for UTR\n    let chars = tin.toUpperCase().split('');\n    // Fill with zeros if smaller than proper\n    while (chars.length < 8) {\n      chars.unshift(0);\n    }\n    // Validate format according to last character\n    switch (tin[7]) {\n      case 'A':\n      case 'P':\n        if (parseInt(chars[6], 10) === 0) { return false; }\n        break;\n      default: {\n        const first_part = parseInt(chars.join('').slice(0, 5), 10);\n        if (first_part > 32000) { return false; }\n        const second_part = parseInt(chars.join('').slice(5, 7), 10);\n        if (first_part === second_part) { return false; }\n      }\n    }\n  }\n  return true;\n}\n\n/*\n * nl-NL validation function\n * (Burgerservicenummer (BSN) or Rechtspersonen Samenwerkingsverbanden Informatie Nummer (RSIN),\n * persons/entities respectively)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction nlNlCheck(tin) {\n  return _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(a => parseInt(a, 10)), 9) % 11 === parseInt(tin[8], 10);\n}\n\n/*\n * pl-PL validation function\n * (Powszechny Elektroniczny System Ewidencji Ludności (PESEL)\n * or Numer identyfikacji podatkowej (NIP), persons/entities)\n * Verify TIN validity by validating birth date (PESEL) and calculating check (last) digit\n */\nfunction plPlCheck(tin) {\n  // NIP\n  if (tin.length === 10) {\n    // Calculate last digit by multiplying with lookup\n    const lookup = [6, 5, 7, 2, 3, 4, 5, 6, 7];\n    let checksum = 0;\n    for (let i = 0; i < lookup.length; i++) {\n      checksum += parseInt(tin[i], 10) * lookup[i];\n    }\n    checksum %= 11;\n    if (checksum === 10) { return false; }\n    return (checksum === parseInt(tin[9], 10));\n  }\n\n  // PESEL\n  // Extract full year using month\n  let full_year = tin.slice(0, 2);\n  let month = parseInt(tin.slice(2, 4), 10);\n  if (month > 80) {\n    full_year = `18${full_year}`;\n    month -= 80;\n  } else if (month > 60) {\n    full_year = `22${full_year}`;\n    month -= 60;\n  } else if (month > 40) {\n    full_year = `21${full_year}`;\n    month -= 40;\n  } else if (month > 20) {\n    full_year = `20${full_year}`;\n    month -= 20;\n  } else {\n    full_year = `19${full_year}`;\n  }\n  // Add leading zero to month if needed\n  if (month < 10) { month = `0${month}`; }\n  // Check date validity\n  const date = `${full_year}/${month}/${tin.slice(4, 6)}`;\n  if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  // Calculate last digit by mulitplying with odd one-digit numbers except 5\n  let checksum = 0;\n  let multiplier = 1;\n  for (let i = 0; i < tin.length - 1; i++) {\n    checksum += (parseInt(tin[i], 10) * multiplier) % 10;\n    multiplier += 2;\n    if (multiplier > 10) {\n      multiplier = 1;\n    } else if (multiplier === 5) {\n      multiplier += 2;\n    }\n  }\n  checksum = 10 - (checksum % 10);\n  return checksum === parseInt(tin[10], 10);\n}\n\n/*\n* pt-BR validation function\n* (Cadastro de Pessoas Físicas (CPF, persons)\n* Cadastro Nacional de Pessoas Jurídicas (CNPJ, entities)\n* Both inputs will be validated\n*/\n\nfunction ptBrCheck(tin) {\n  if (tin.length === 11) {\n    let sum;\n    let remainder;\n    sum = 0;\n\n    if ( // Reject known invalid CPFs\n      tin === '11111111111' ||\n      tin === '22222222222' ||\n      tin === '33333333333' ||\n      tin === '44444444444' ||\n      tin === '55555555555' ||\n      tin === '66666666666' ||\n      tin === '77777777777' ||\n      tin === '88888888888' ||\n      tin === '99999999999' ||\n      tin === '00000000000'\n    ) return false;\n\n    for (let i = 1; i <= 9; i++) sum += parseInt(tin.substring(i - 1, i), 10) * (11 - i);\n    remainder = (sum * 10) % 11;\n    if (remainder === 10) remainder = 0;\n    if (remainder !== parseInt(tin.substring(9, 10), 10)) return false;\n    sum = 0;\n\n    for (let i = 1; i <= 10; i++) sum += parseInt(tin.substring(i - 1, i), 10) * (12 - i);\n    remainder = (sum * 10) % 11;\n    if (remainder === 10) remainder = 0;\n    if (remainder !== parseInt(tin.substring(10, 11), 10)) return false;\n\n    return true;\n  }\n\n  if ( // Reject know invalid CNPJs\n    tin === '00000000000000' ||\n    tin === '11111111111111' ||\n    tin === '22222222222222' ||\n    tin === '33333333333333' ||\n    tin === '44444444444444' ||\n    tin === '55555555555555' ||\n    tin === '66666666666666' ||\n    tin === '77777777777777' ||\n    tin === '88888888888888' ||\n    tin === '99999999999999') { return false; }\n\n  let length = tin.length - 2;\n  let identifiers = tin.substring(0, length);\n  let verificators = tin.substring(length);\n  let sum = 0;\n  let pos = length - 7;\n\n  for (let i = length; i >= 1; i--) {\n    sum += identifiers.charAt(length - i) * pos;\n    pos -= 1;\n    if (pos < 2) { pos = 9; }\n  }\n  let result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n  if (result !== parseInt(verificators.charAt(0), 10)) { return false; }\n\n  length += 1;\n  identifiers = tin.substring(0, length);\n  sum = 0;\n  pos = length - 7;\n  for (let i = length; i >= 1; i--) {\n    sum += identifiers.charAt(length - i) * pos;\n    pos -= 1;\n    if (pos < 2) { pos = 9; }\n  }\n  result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n  if (result !== parseInt(verificators.charAt(1), 10)) { return false; }\n\n  return true;\n}\n\n/*\n * pt-PT validation function\n * (Número de identificação fiscal (NIF), persons/entities)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction ptPtCheck(tin) {\n  let checksum = 11 - (_util_algorithms__WEBPACK_IMPORTED_MODULE_1__.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(a => parseInt(a, 10)), 9) % 11);\n  if (checksum > 9) { return parseInt(tin[8], 10) === 0; }\n  return checksum === parseInt(tin[8], 10);\n}\n\n/*\n * ro-RO validation function\n * (Cod Numeric Personal (CNP) or Cod de înregistrare fiscală (CIF),\n * persons only)\n * Verify CNP validity by calculating check (last) digit (test not found for CIF)\n * Material not in DG TAXUD document sourced from:\n * `https://en.wikipedia.org/wiki/National_identification_number#Romania`\n */\nfunction roRoCheck(tin) {\n  if (tin.slice(0, 4) !== '9000') { // No test found for this format\n    // Extract full year using century digit if possible\n    let full_year = tin.slice(1, 3);\n    switch (tin[0]) {\n      case '1':\n      case '2':\n        full_year = `19${full_year}`;\n        break;\n      case '3':\n      case '4':\n        full_year = `18${full_year}`;\n        break;\n      case '5':\n      case '6':\n        full_year = `20${full_year}`;\n        break;\n      default:\n    }\n\n    // Check date validity\n    const date = `${full_year}/${tin.slice(3, 5)}/${tin.slice(5, 7)}`;\n    if (date.length === 8) {\n      if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YY/MM/DD')) { return false; }\n    } else if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n    // Calculate check digit\n    const digits = tin.split('').map(a => parseInt(a, 10));\n    const multipliers = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n    let checksum = 0;\n    for (let i = 0; i < multipliers.length; i++) {\n      checksum += digits[i] * multipliers[i];\n    }\n    if (checksum % 11 === 10) { return digits[12] === 1; }\n    return digits[12] === checksum % 11;\n  }\n  return true;\n}\n\n/*\n * sk-SK validation function\n * (Rodné číslo (RČ) or bezvýznamové identifikačné číslo (BIČ), persons only)\n * Checks validity of pre-1954 birth numbers (rodné číslo) only\n * Due to the introduction of the pseudo-random BIČ it is not possible to test\n * post-1954 birth numbers without knowing whether they are BIČ or RČ beforehand\n */\nfunction skSkCheck(tin) {\n  if (tin.length === 9) {\n    tin = tin.replace(/\\W/, '');\n    if (tin.slice(6) === '000') { return false; } // Three-zero serial not assigned before 1954\n\n    // Extract full year from TIN length\n    let full_year = parseInt(tin.slice(0, 2), 10);\n    if (full_year > 53) { return false; }\n    if (full_year < 10) {\n      full_year = `190${full_year}`;\n    } else {\n      full_year = `19${full_year}`;\n    }\n\n    // Extract month from TIN and normalize\n    let month = parseInt(tin.slice(2, 4), 10);\n    if (month > 50) {\n      month -= 50;\n    }\n    if (month < 10) { month = `0${month}`; }\n\n    // Check date validity\n    const date = `${full_year}/${month}/${tin.slice(4, 6)}`;\n    if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n  }\n  return true;\n}\n\n/*\n * sl-SI validation function\n * (Davčna številka, persons/entities)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction slSiCheck(tin) {\n  let checksum = 11 - (_util_algorithms__WEBPACK_IMPORTED_MODULE_1__.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(a => parseInt(a, 10)), 8) % 11);\n  if (checksum === 10) { return parseInt(tin[7], 10) === 0; }\n  return checksum === parseInt(tin[7], 10);\n}\n\n/*\n * sv-SE validation function\n * (Personnummer or samordningsnummer, persons only)\n * Checks validity of birth date and calls luhnCheck() to validate check (last) digit\n */\nfunction svSeCheck(tin) {\n  // Make copy of TIN and normalize to two-digit year form\n  let tin_copy = tin.slice(0);\n  if (tin.length > 11) {\n    tin_copy = tin_copy.slice(2);\n  }\n\n  // Extract date of birth\n  let full_year = '';\n  const month = tin_copy.slice(2, 4);\n  let day = parseInt(tin_copy.slice(4, 6), 10);\n  if (tin.length > 11) {\n    full_year = tin.slice(0, 4);\n  } else {\n    full_year = tin.slice(0, 2);\n    if (tin.length === 11 && day < 60) {\n      // Extract full year from centenarian symbol\n      // Should work just fine until year 10000 or so\n      let current_year = new Date().getFullYear().toString();\n      const current_century = parseInt(current_year.slice(0, 2), 10);\n      current_year = parseInt(current_year, 10);\n      if (tin[6] === '-') {\n        if (parseInt(`${current_century}${full_year}`, 10) > current_year) {\n          full_year = `${current_century - 1}${full_year}`;\n        } else {\n          full_year = `${current_century}${full_year}`;\n        }\n      } else {\n        full_year = `${current_century - 1}${full_year}`;\n        if (current_year - parseInt(full_year, 10) < 100) { return false; }\n      }\n    }\n  }\n\n  // Normalize day and check date validity\n  if (day > 60) { day -= 60; }\n  if (day < 10) { day = `0${day}`; }\n  const date = `${full_year}/${month}/${day}`;\n  if (date.length === 8) {\n    if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YY/MM/DD')) { return false; }\n  } else if (!(0,_isDate__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date, 'YYYY/MM/DD')) { return false; }\n\n  return _util_algorithms__WEBPACK_IMPORTED_MODULE_1__.luhnCheck(tin.replace(/\\W/, ''));\n}\n\n// Locale lookup objects\n\n/*\n * Tax id regex formats for various locales\n *\n * Where not explicitly specified in DG-TAXUD document both\n * uppercase and lowercase letters are acceptable.\n */\nconst taxIdFormat = {\n  'bg-BG': /^\\d{10}$/,\n  'cs-CZ': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n  'de-AT': /^\\d{9}$/,\n  'de-DE': /^[1-9]\\d{10}$/,\n  'dk-DK': /^\\d{6}-{0,1}\\d{4}$/,\n  'el-CY': /^[09]\\d{7}[A-Z]$/,\n  'el-GR': /^([0-4]|[7-9])\\d{8}$/,\n  'en-CA': /^\\d{9}$/,\n  'en-GB': /^\\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\\d{6}[ABCD ]$/i,\n  'en-IE': /^\\d{7}[A-W][A-IW]{0,1}$/i,\n  'en-US': /^\\d{2}[- ]{0,1}\\d{7}$/,\n  'es-ES': /^(\\d{0,8}|[XYZKLM]\\d{7})[A-HJ-NP-TV-Z]$/i,\n  'et-EE': /^[1-6]\\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\\d$/,\n  'fi-FI': /^\\d{6}[-+A]\\d{3}[0-9A-FHJ-NPR-Y]$/i,\n  'fr-BE': /^\\d{11}$/,\n  'fr-FR': /^[0-3]\\d{12}$|^[0-3]\\d\\s\\d{2}(\\s\\d{3}){3}$/, // Conforms both to official spec and provided example\n  'fr-LU': /^\\d{13}$/,\n  'hr-HR': /^\\d{11}$/,\n  'hu-HU': /^8\\d{9}$/,\n  'it-IT': /^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,\n  'lv-LV': /^\\d{6}-{0,1}\\d{5}$/, // Conforms both to DG TAXUD spec and original research\n  'mt-MT': /^\\d{3,7}[APMGLHBZ]$|^([1-8])\\1\\d{7}$/i,\n  'nl-NL': /^\\d{9}$/,\n  'pl-PL': /^\\d{10,11}$/,\n  'pt-BR': /(?:^\\d{11}$)|(?:^\\d{14}$)/,\n  'pt-PT': /^\\d{9}$/,\n  'ro-RO': /^\\d{13}$/,\n  'sk-SK': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n  'sl-SI': /^[1-9]\\d{7}$/,\n  'sv-SE': /^(\\d{6}[-+]{0,1}\\d{4}|(18|19|20)\\d{6}[-+]{0,1}\\d{4})$/,\n};\n// taxIdFormat locale aliases\ntaxIdFormat['lb-LU'] = taxIdFormat['fr-LU'];\ntaxIdFormat['lt-LT'] = taxIdFormat['et-EE'];\ntaxIdFormat['nl-BE'] = taxIdFormat['fr-BE'];\ntaxIdFormat['fr-CA'] = taxIdFormat['en-CA'];\n\n// Algorithmic tax id check functions for various locales\nconst taxIdCheck = {\n  'bg-BG': bgBgCheck,\n  'cs-CZ': csCzCheck,\n  'de-AT': deAtCheck,\n  'de-DE': deDeCheck,\n  'dk-DK': dkDkCheck,\n  'el-CY': elCyCheck,\n  'el-GR': elGrCheck,\n  'en-CA': isCanadianSIN,\n  'en-IE': enIeCheck,\n  'en-US': enUsCheck,\n  'es-ES': esEsCheck,\n  'et-EE': etEeCheck,\n  'fi-FI': fiFiCheck,\n  'fr-BE': frBeCheck,\n  'fr-FR': frFrCheck,\n  'fr-LU': frLuCheck,\n  'hr-HR': hrHrCheck,\n  'hu-HU': huHuCheck,\n  'it-IT': itItCheck,\n  'lv-LV': lvLvCheck,\n  'mt-MT': mtMtCheck,\n  'nl-NL': nlNlCheck,\n  'pl-PL': plPlCheck,\n  'pt-BR': ptBrCheck,\n  'pt-PT': ptPtCheck,\n  'ro-RO': roRoCheck,\n  'sk-SK': skSkCheck,\n  'sl-SI': slSiCheck,\n  'sv-SE': svSeCheck,\n};\n// taxIdCheck locale aliases\ntaxIdCheck['lb-LU'] = taxIdCheck['fr-LU'];\ntaxIdCheck['lt-LT'] = taxIdCheck['et-EE'];\ntaxIdCheck['nl-BE'] = taxIdCheck['fr-BE'];\ntaxIdCheck['fr-CA'] = taxIdCheck['en-CA'];\n\n// Regexes for locales where characters should be omitted before checking format\nconst allsymbols = /[-\\\\\\/!@#$%\\^&\\*\\(\\)\\+\\=\\[\\]]+/g;\nconst sanitizeRegexes = {\n  'de-AT': allsymbols,\n  'de-DE': /[\\/\\\\]/g,\n  'fr-BE': allsymbols,\n};\n// sanitizeRegexes locale aliases\nsanitizeRegexes['nl-BE'] = sanitizeRegexes['fr-BE'];\n\n/*\n * Validator function\n * Return true if the passed string is a valid tax identification number\n * for the specified locale.\n * Throw an error exception if the locale is not supported.\n */\nfunction isTaxID(str, locale = 'en-US') {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(str);\n  // Copy TIN to avoid replacement if sanitized\n  let strcopy = str.slice(0);\n\n  if (locale in taxIdFormat) {\n    if (locale in sanitizeRegexes) {\n      strcopy = strcopy.replace(sanitizeRegexes[locale], '');\n    }\n    if (!taxIdFormat[locale].test(strcopy)) {\n      return false;\n    }\n\n    if (locale in taxIdCheck) {\n      return taxIdCheck[locale](strcopy);\n    }\n    // Fallthrough; not all locales have algorithmic checks\n    return true;\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isTaxID.js?");

/***/ }),

/***/ "./src/lib/isURL.js":
/*!**************************!*\
  !*** ./src/lib/isURL.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isURL)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isFQDN__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isFQDN */ \"./src/lib/isFQDN.js\");\n/* harmony import */ var _isIP__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isIP */ \"./src/lib/isIP.js\");\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\n\n\n\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\n\n\nconst default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true,\n};\n\nconst wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (let i = 0; i < matches.length; i++) {\n    let match = matches[i];\n    if (host === match || (isRegExp(match) && match.test(host))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(url);\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  let protocol, auth, host, hostname, port, port_str, split, ipv6;\n\n  split = url.split('#');\n  url = split.shift();\n\n  split = url.split('?');\n  url = split.shift();\n\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n    if (split[0] === '') {\n      return false;\n    }\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n    const [user, password] = auth.split(':');\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n\n  port_str = null;\n  ipv6 = null;\n  const ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n  if (!(0,_isIP__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(host) && !(0,_isFQDN__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(host, options) && (!ipv6 || !(0,_isIP__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isURL.js?");

/***/ }),

/***/ "./src/lib/isUUID.js":
/*!***************************!*\
  !*** ./src/lib/isUUID.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isUUID)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nconst uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n};\n\nfunction isUUID(str, version) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isUUID.js?");

/***/ }),

/***/ "./src/lib/isUppercase.js":
/*!********************************!*\
  !*** ./src/lib/isUppercase.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isUppercase)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction isUppercase(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return str === str.toUpperCase();\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isUppercase.js?");

/***/ }),

/***/ "./src/lib/isVAT.js":
/*!**************************!*\
  !*** ./src/lib/isVAT.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isVAT),\n/* harmony export */   \"vatMatchers\": () => (/* binding */ vatMatchers)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\r\n\r\nconst vatMatchers = {\r\n  GB: /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,\r\n  IT: /^(IT)?[0-9]{11}$/,\r\n  NL: /^(NL)?[0-9]{9}B[0-9]{2}$/,\r\n};\r\n\r\nfunction isVAT(str, countryCode) {\r\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\r\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(countryCode);\r\n\r\n  if (countryCode in vatMatchers) {\r\n    return vatMatchers[countryCode].test(str);\r\n  }\r\n  throw new Error(`Invalid country code: '${countryCode}'`);\r\n}\r\n\n\n//# sourceURL=webpack://validator/./src/lib/isVAT.js?");

/***/ }),

/***/ "./src/lib/isVariableWidth.js":
/*!************************************!*\
  !*** ./src/lib/isVariableWidth.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isVariableWidth)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _isFullWidth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isFullWidth */ \"./src/lib/isFullWidth.js\");\n/* harmony import */ var _isHalfWidth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isHalfWidth */ \"./src/lib/isHalfWidth.js\");\n\n\n\n\n\nfunction isVariableWidth(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return _isFullWidth__WEBPACK_IMPORTED_MODULE_1__.fullWidth.test(str) && _isHalfWidth__WEBPACK_IMPORTED_MODULE_2__.halfWidth.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isVariableWidth.js?");

/***/ }),

/***/ "./src/lib/isWhitelisted.js":
/*!**********************************!*\
  !*** ./src/lib/isWhitelisted.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isWhitelisted)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction isWhitelisted(str, chars) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  for (let i = str.length - 1; i >= 0; i--) {\n    if (chars.indexOf(str[i]) === -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/isWhitelisted.js?");

/***/ }),

/***/ "./src/lib/ltrim.js":
/*!**************************!*\
  !*** ./src/lib/ltrim.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ltrim)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction ltrim(str, chars) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n  const pattern = chars ? new RegExp(`^[${chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}]+`, 'g') : /^\\s+/g;\n  return str.replace(pattern, '');\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/ltrim.js?");

/***/ }),

/***/ "./src/lib/matches.js":
/*!****************************!*\
  !*** ./src/lib/matches.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ matches)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction matches(str, pattern, modifiers) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n  return pattern.test(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/matches.js?");

/***/ }),

/***/ "./src/lib/normalizeEmail.js":
/*!***********************************!*\
  !*** ./src/lib/normalizeEmail.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ normalizeEmail)\n/* harmony export */ });\n/* harmony import */ var _util_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/merge */ \"./src/lib/util/merge.js\");\n\n\nconst default_normalize_email_options = {\n  // The following options apply to all email addresses\n  // Lowercases the local part of the email address.\n  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).\n  // The domain is always lowercased, as per RFC 1035\n  all_lowercase: true,\n\n  // The following conversions are specific to GMail\n  // Lowercases the local part of the GMail address (known to be case-insensitive)\n  gmail_lowercase: true,\n  // Removes dots from the local part of the email address, as that's ignored by GMail\n  gmail_remove_dots: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  gmail_remove_subaddress: true,\n  // Conversts the googlemail.com domain to gmail.com\n  gmail_convert_googlemaildotcom: true,\n\n  // The following conversions are specific to Outlook.com / Windows Live / Hotmail\n  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)\n  outlookdotcom_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  outlookdotcom_remove_subaddress: true,\n\n  // The following conversions are specific to Yahoo\n  // Lowercases the local part of the Yahoo address (known to be case-insensitive)\n  yahoo_lowercase: true,\n  // Removes the subaddress (e.g. \"-foo\") from the email address\n  yahoo_remove_subaddress: true,\n\n  // The following conversions are specific to Yandex\n  // Lowercases the local part of the Yandex address (known to be case-insensitive)\n  yandex_lowercase: true,\n\n  // The following conversions are specific to iCloud\n  // Lowercases the local part of the iCloud address (known to be case-insensitive)\n  icloud_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  icloud_remove_subaddress: true,\n};\n\n// List of domains used by iCloud\nconst icloud_domains = [\n  'icloud.com',\n  'me.com',\n];\n\n// List of domains used by Outlook.com and its predecessors\n// This list is likely incomplete.\n// Partial reference:\n// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/\nconst outlookdotcom_domains = [\n  'hotmail.at',\n  'hotmail.be',\n  'hotmail.ca',\n  'hotmail.cl',\n  'hotmail.co.il',\n  'hotmail.co.nz',\n  'hotmail.co.th',\n  'hotmail.co.uk',\n  'hotmail.com',\n  'hotmail.com.ar',\n  'hotmail.com.au',\n  'hotmail.com.br',\n  'hotmail.com.gr',\n  'hotmail.com.mx',\n  'hotmail.com.pe',\n  'hotmail.com.tr',\n  'hotmail.com.vn',\n  'hotmail.cz',\n  'hotmail.de',\n  'hotmail.dk',\n  'hotmail.es',\n  'hotmail.fr',\n  'hotmail.hu',\n  'hotmail.id',\n  'hotmail.ie',\n  'hotmail.in',\n  'hotmail.it',\n  'hotmail.jp',\n  'hotmail.kr',\n  'hotmail.lv',\n  'hotmail.my',\n  'hotmail.ph',\n  'hotmail.pt',\n  'hotmail.sa',\n  'hotmail.sg',\n  'hotmail.sk',\n  'live.be',\n  'live.co.uk',\n  'live.com',\n  'live.com.ar',\n  'live.com.mx',\n  'live.de',\n  'live.es',\n  'live.eu',\n  'live.fr',\n  'live.it',\n  'live.nl',\n  'msn.com',\n  'outlook.at',\n  'outlook.be',\n  'outlook.cl',\n  'outlook.co.il',\n  'outlook.co.nz',\n  'outlook.co.th',\n  'outlook.com',\n  'outlook.com.ar',\n  'outlook.com.au',\n  'outlook.com.br',\n  'outlook.com.gr',\n  'outlook.com.pe',\n  'outlook.com.tr',\n  'outlook.com.vn',\n  'outlook.cz',\n  'outlook.de',\n  'outlook.dk',\n  'outlook.es',\n  'outlook.fr',\n  'outlook.hu',\n  'outlook.id',\n  'outlook.ie',\n  'outlook.in',\n  'outlook.it',\n  'outlook.jp',\n  'outlook.kr',\n  'outlook.lv',\n  'outlook.my',\n  'outlook.ph',\n  'outlook.pt',\n  'outlook.sa',\n  'outlook.sg',\n  'outlook.sk',\n  'passport.com',\n];\n\n// List of domains used by Yahoo Mail\n// This list is likely incomplete\nconst yahoo_domains = [\n  'rocketmail.com',\n  'yahoo.ca',\n  'yahoo.co.uk',\n  'yahoo.com',\n  'yahoo.de',\n  'yahoo.fr',\n  'yahoo.in',\n  'yahoo.it',\n  'ymail.com',\n];\n\n// List of domains used by yandex.ru\nconst yandex_domains = [\n  'yandex.ru',\n  'yandex.ua',\n  'yandex.kz',\n  'yandex.com',\n  'yandex.by',\n  'ya.ru',\n];\n\n// replace single dots, but not multiple consecutive dots\nfunction dotsReplacer(match) {\n  if (match.length > 1) {\n    return match;\n  }\n  return '';\n}\n\nfunction normalizeEmail(email, options) {\n  options = (0,_util_merge__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options, default_normalize_email_options);\n\n  const raw_parts = email.split('@');\n  const domain = raw_parts.pop();\n  const user = raw_parts.join('@');\n  const parts = [user, domain];\n\n  // The domain is always lowercased, as it's case-insensitive per RFC 1035\n  parts[1] = parts[1].toLowerCase();\n\n  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n    // Address is GMail\n    if (options.gmail_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (options.gmail_remove_dots) {\n      // this does not replace consecutive dots like example..email@gmail.com\n      parts[0] = parts[0].replace(/\\.+/g, dotsReplacer);\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.gmail_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];\n  } else if (icloud_domains.indexOf(parts[1]) >= 0) {\n    // Address is iCloud\n    if (options.icloud_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.icloud_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {\n    // Address is Outlook.com\n    if (options.outlookdotcom_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.outlookdotcom_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (yahoo_domains.indexOf(parts[1]) >= 0) {\n    // Address is Yahoo\n    if (options.yahoo_remove_subaddress) {\n      let components = parts[0].split('-');\n      parts[0] = (components.length > 1) ? components.slice(0, -1).join('-') : components[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.yahoo_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (yandex_domains.indexOf(parts[1]) >= 0) {\n    if (options.all_lowercase || options.yandex_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n    parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preferred\n  } else if (options.all_lowercase) {\n    // Any other address\n    parts[0] = parts[0].toLowerCase();\n  }\n  return parts.join('@');\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/normalizeEmail.js?");

/***/ }),

/***/ "./src/lib/rtrim.js":
/*!**************************!*\
  !*** ./src/lib/rtrim.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rtrim)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction rtrim(str, chars) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (chars) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n    const pattern = new RegExp(`[${chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}]+$`, 'g');\n    return str.replace(pattern, '');\n  }\n  // Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript\n  let strIndex = str.length - 1;\n  while (/\\s/.test(str.charAt(strIndex))) {\n    strIndex -= 1;\n  }\n\n  return str.slice(0, strIndex + 1);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/rtrim.js?");

/***/ }),

/***/ "./src/lib/stripLow.js":
/*!*****************************!*\
  !*** ./src/lib/stripLow.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ stripLow)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n/* harmony import */ var _blacklist__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blacklist */ \"./src/lib/blacklist.js\");\n\n\n\n\nfunction stripLow(str, keep_new_lines) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  const chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n  return (0,_blacklist__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str, chars);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/stripLow.js?");

/***/ }),

/***/ "./src/lib/toBoolean.js":
/*!******************************!*\
  !*** ./src/lib/toBoolean.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toBoolean)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction toBoolean(str, strict) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  if (strict) {\n    return str === '1' || /^true$/i.test(str);\n  }\n  return str !== '0' && !/^false$/i.test(str) && str !== '';\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/toBoolean.js?");

/***/ }),

/***/ "./src/lib/toDate.js":
/*!***************************!*\
  !*** ./src/lib/toDate.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toDate)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction toDate(date) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(date);\n  date = Date.parse(date);\n  return !isNaN(date) ? new Date(date) : null;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/toDate.js?");

/***/ }),

/***/ "./src/lib/toFloat.js":
/*!****************************!*\
  !*** ./src/lib/toFloat.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toFloat)\n/* harmony export */ });\n/* harmony import */ var _isFloat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isFloat */ \"./src/lib/isFloat.js\");\n\n\nfunction toFloat(str) {\n  if (!(0,_isFloat__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str)) return NaN;\n\n  return parseFloat(str);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/toFloat.js?");

/***/ }),

/***/ "./src/lib/toInt.js":
/*!**************************!*\
  !*** ./src/lib/toInt.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toInt)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction toInt(str, radix) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return parseInt(str, radix || 10);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/toInt.js?");

/***/ }),

/***/ "./src/lib/trim.js":
/*!*************************!*\
  !*** ./src/lib/trim.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ trim)\n/* harmony export */ });\n/* harmony import */ var _rtrim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rtrim */ \"./src/lib/rtrim.js\");\n/* harmony import */ var _ltrim__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ltrim */ \"./src/lib/ltrim.js\");\n\n\n\nfunction trim(str, chars) {\n  return (0,_rtrim__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_ltrim__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(str, chars), chars);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/trim.js?");

/***/ }),

/***/ "./src/lib/unescape.js":
/*!*****************************!*\
  !*** ./src/lib/unescape.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ unescape)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction unescape(str) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return (str.replace(/&quot;/g, '\"')\n    .replace(/&#x27;/g, \"'\")\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&#x2F;/g, '/')\n    .replace(/&#x5C;/g, '\\\\')\n    .replace(/&#96;/g, '`')\n    .replace(/&amp;/g, '&'));\n  // &amp; replacement has to be the last one to prevent\n  // bugs with intermediate strings containing escape sequences\n  // See: https://github.com/validatorjs/validator.js/issues/1827\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/unescape.js?");

/***/ }),

/***/ "./src/lib/util/algorithms.js":
/*!************************************!*\
  !*** ./src/lib/util/algorithms.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"iso7064Check\": () => (/* binding */ iso7064Check),\n/* harmony export */   \"luhnCheck\": () => (/* binding */ luhnCheck),\n/* harmony export */   \"reverseMultiplyAndSum\": () => (/* binding */ reverseMultiplyAndSum),\n/* harmony export */   \"verhoeffCheck\": () => (/* binding */ verhoeffCheck)\n/* harmony export */ });\n/**\n * Algorithmic validation functions\n * May be used as is or implemented in the workflow of other validators.\n */\n\n/*\n * ISO 7064 validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to ISO 7064 (MOD 11, 10).\n */\nfunction iso7064Check(str) {\n  let checkvalue = 10;\n  for (let i = 0; i < str.length - 1; i++) {\n    checkvalue = (parseInt(str[i], 10) + checkvalue) % 10 === 0 ? (10 * 2) % 11 :\n      (((parseInt(str[i], 10) + checkvalue) % 10) * 2) % 11;\n  }\n  checkvalue = checkvalue === 1 ? 0 : 11 - checkvalue;\n  return checkvalue === parseInt(str[10], 10);\n}\n\n/*\n * Luhn (mod 10) validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to the Luhn algorithm.\n */\nfunction luhnCheck(str) {\n  let checksum = 0;\n  let second = false;\n  for (let i = str.length - 1; i >= 0; i--) {\n    if (second) {\n      const product = parseInt(str[i], 10) * 2;\n      if (product > 9) {\n        // sum digits of product and add to checksum\n        checksum += product.toString().split('').map(a => parseInt(a, 10)).reduce((a, b) => a + b, 0);\n      } else {\n        checksum += product;\n      }\n    } else {\n      checksum += parseInt(str[i], 10);\n    }\n    second = !second;\n  }\n  return checksum % 10 === 0;\n}\n\n/*\n * Reverse TIN multiplication and summation helper function\n * Called with an array of single-digit integers and a base multiplier\n * to calculate the sum of the digits multiplied in reverse.\n * Normally used in variations of MOD 11 algorithmic checks.\n */\nfunction reverseMultiplyAndSum(digits, base) {\n  let total = 0;\n  for (let i = 0; i < digits.length; i++) {\n    total += digits[i] * (base - i);\n  }\n  return total;\n}\n\n/*\n * Verhoeff validation helper function\n * Called with a string of numbers\n * to validate according to the Verhoeff algorithm.\n */\nfunction verhoeffCheck(str) {\n  const d_table = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [1, 2, 3, 4, 0, 6, 7, 8, 9, 5],\n    [2, 3, 4, 0, 1, 7, 8, 9, 5, 6],\n    [3, 4, 0, 1, 2, 8, 9, 5, 6, 7],\n    [4, 0, 1, 2, 3, 9, 5, 6, 7, 8],\n    [5, 9, 8, 7, 6, 0, 4, 3, 2, 1],\n    [6, 5, 9, 8, 7, 1, 0, 4, 3, 2],\n    [7, 6, 5, 9, 8, 2, 1, 0, 4, 3],\n    [8, 7, 6, 5, 9, 3, 2, 1, 0, 4],\n    [9, 8, 7, 6, 5, 4, 3, 2, 1, 0],\n  ];\n\n  const p_table = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [1, 5, 7, 6, 2, 8, 3, 0, 9, 4],\n    [5, 8, 0, 3, 7, 9, 6, 1, 4, 2],\n    [8, 9, 1, 6, 0, 4, 3, 5, 2, 7],\n    [9, 4, 5, 3, 1, 2, 6, 8, 7, 0],\n    [4, 2, 8, 6, 5, 7, 3, 9, 0, 1],\n    [2, 7, 9, 3, 8, 0, 6, 4, 1, 5],\n    [7, 0, 4, 6, 9, 1, 3, 2, 5, 8],\n  ];\n\n  // Copy (to prevent replacement) and reverse\n  const str_copy = str.split('').reverse().join('');\n  let checksum = 0;\n  for (let i = 0; i < str_copy.length; i++) {\n    checksum = d_table[checksum][p_table[i % 8][parseInt(str_copy[i], 10)]];\n  }\n  return checksum === 0;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/util/algorithms.js?");

/***/ }),

/***/ "./src/lib/util/assertString.js":
/*!**************************************!*\
  !*** ./src/lib/util/assertString.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ assertString)\n/* harmony export */ });\nfunction assertString(input) {\n  const isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    let invalidType = typeof input;\n    if (input === null) invalidType = 'null';\n    else if (invalidType === 'object') invalidType = input.constructor.name;\n\n    throw new TypeError(`Expected a string but received a ${invalidType}`);\n  }\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/util/assertString.js?");

/***/ }),

/***/ "./src/lib/util/includes.js":
/*!**********************************!*\
  !*** ./src/lib/util/includes.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst includes = (arr, val) => arr.some(arrVal => val === arrVal);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (includes);\n\n\n//# sourceURL=webpack://validator/./src/lib/util/includes.js?");

/***/ }),

/***/ "./src/lib/util/merge.js":
/*!*******************************!*\
  !*** ./src/lib/util/merge.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ merge)\n/* harmony export */ });\nfunction merge(obj = { }, defaults) {\n  for (const key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n  return obj;\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/util/merge.js?");

/***/ }),

/***/ "./src/lib/util/multilineRegex.js":
/*!****************************************!*\
  !*** ./src/lib/util/multilineRegex.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ multilineRegexp)\n/* harmony export */ });\n/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nfunction multilineRegexp(parts, flags) {\n  const regexpAsStringLiteral = parts.join('');\n\n  return new RegExp(regexpAsStringLiteral, flags);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/util/multilineRegex.js?");

/***/ }),

/***/ "./src/lib/util/toString.js":
/*!**********************************!*\
  !*** ./src/lib/util/toString.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toString)\n/* harmony export */ });\nfunction toString(input) {\n  if (typeof input === 'object' && input !== null) {\n    if (typeof input.toString === 'function') {\n      input = input.toString();\n    } else {\n      input = '[object Object]';\n    }\n  } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {\n    input = '';\n  }\n  return String(input);\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/util/toString.js?");

/***/ }),

/***/ "./src/lib/whitelist.js":
/*!******************************!*\
  !*** ./src/lib/whitelist.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ whitelist)\n/* harmony export */ });\n/* harmony import */ var _util_assertString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/assertString */ \"./src/lib/util/assertString.js\");\n\n\nfunction whitelist(str, chars) {\n  (0,_util_assertString__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(str);\n  return str.replace(new RegExp(`[^${chars}]+`, 'g'), '');\n}\n\n\n//# sourceURL=webpack://validator/./src/lib/whitelist.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	var __webpack_export_target__ = this;
/******/ 	for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
/******/ 	if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
/******/ 	
/******/ })()
;